{"version":3,"sources":["../node_modules/typescript/lib sync","HomeLayout.js","controllers/TranslationController.js","stores/TranslationStore.js","controllers/TrainController.js","stores/TrainStore.js","components/TranslationView.js","models/Member.js","controllers/MemberController.js","stores/MemberStore.js","components/SignUpView.js","components/SignInView.js","models/Dictionary.js","controllers/DictionaryController.js","stores/DictionaryStore.js","components/DictionaryView.js","components/TrainView.js","components/MemberUpdateDialog.js","components/ProfileCard.js","components/RankingCard.js","components/EvaluatedView.js","components/MyPageView.js","controllers/FileTranslationController.js","stores/FileTranslationStore.js","controllers/TranslationApiController.js","stores/TranslationApiStore.js","stores/RootStore.js","stores/Context.js","components/CustomUploadTable.js","components/CustomDownloadTable.js","components/FileTranslationView.js","components/TranslationApiView.js","App.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useStyle","makeStyles","theme","root","width","height","appBar","backgroundColor","contentGrid","paddingLeft","accountGrid","title","fontSize","fontWeight","contentArea","paddingTop","minHeight","minWidth","position","link","textDecoration","iconBtn","color","accountIcon","float","HomeLayout","props","children","useState","classes","setHasCookie","cookies","removeCookie","hasCookie","className","AppBar","Toolbar","toolBar","alignItems","Grid","container","direction","justify","to","pathname","style","Button","size","variant","IconButton","onClick","path","_NK","_code","a","axios","get","params","NK","withCredentials","catch","error","then","res","data","result","name","perpose","post","console","log","TranslationStore","this","context","createContext","northText","requestTranslate","purpose","requestGetApiKey","instance","observable","action","getInstance","_isLike","_SK","SK","isGood","TrainStore","isLike","inputText","outputText","requestTransLike","requestGetTestCase","requestTransOffer","useStyles","display","textAlign","content","paper","marginTop","textField","button","box","textLength","right","bottom","clearButton","top","bukPaper","namPaper","upDownBtn","TranslationView","setInputText","inputTextLength","setInputTextLength","setOutputTextLength","setOutputText","open","setOpen","setContent","severity","setSeverity","translateState","setTranslateState","maxTextLength","translationStore","React","useContext","trainStore","setCode","transCode","setTransCode","handleClose","Typography","Switch","checked","onChange","target","inputProps","grid","Paper","TextField","multiline","autoFocus","rows","str","value","length","Box","disableRipple","translate","err","InputProps","readOnly","ButtonGroup","aria-label","transLike","transOffer","navigator","clipboard","writeText","Snackbar","autoHideDuration","onClose","Alert","Member","pw","email","isAdmin","evaluationCount","_id","_pw","member","put","MemberStore","requestSignUp","requestLogin","requestGetRanker","requestGetUserInfo","requestGetMyRank","requestUpdateUser","requsetUpdateKey","requsetGetKey","spacing","flexDirection","avatar","margin","palette","secondary","main","form","submit","SignUpView","memberStore","useRef","snackbar","useSnackbar","history","useHistory","Container","component","maxWidth","CssBaseline","noValidate","item","xs","required","fullWidth","label","autoComplete","inputRef","type","preventDefault","current","showMessage","register","status","message","setTimeout","push","Link","href","SignInView","observer","Avatar","FormControlLabel","control","Checkbox","login","Dictionary","mean","south","warn","tmp","Object","map","key","index","get_dic","_query","query","DictionaryStore","requestGetDictionary","dictionarys","requestSearchDictionary","elem","document","compatMode","documentElement","body","clientHeight","clientWidth","getWidth","tableRate","rate","paddingBottom","table","search","columns","field","headerName","DictionaryView","dictionaryStore","searchDic","useEffect","getDictionary","FormControl","formControl","Select","event","MenuItem","onKeyPress","pageSize","trainText","mainContent","testCard","marginLeft","card","padding","pass","marginRight","cardGrid","rankingCard","mainGrid","ranking","rankingNum","setRanking","getTestCase","getRanker","Card","CardContent","CardActions","Tooltip","disableHoverListener","idx","select","MemberUpdateDialog","defult_id","defult_name","defult_email","defult_key","apiKey","Dialog","aria-labelledby","DialogTitle","DialogContent","defaultValue","DialogActions","updateUser","window","location","reload","rankingContentGrid","admin","editButton","percent","degree","left","ProfileCard","adminText","setAdminText","Tab","EvaluatedView","element","nk","NKsentence","sk","SKsentence","evalResult","list","evalCard","setName","setIsAdmin","setEmail","setPercent","evaluated","setEvaluated","setId","setKey","evalCount","setCount","getUserInfo","nickname","evalInfo","getMyRank","rank_rate","rank","getApiKey","align","requestFileTranslate","_FILES","files","FileTranslationStore","originalFiles","translatedFiles","fileCount","selectedOriginal","selectedTranslated","makeAutoObservable","uploadFile","DeleteFiles","setSelected","setSelectAll","translateFiles","downloadFiles","file","fileName","findIndex","fileList","reader","FileReader","readAsText","onload","fileInfo","filter","caller","newSelected","selectedIndex","indexOf","concat","slice","forEach","translatedFileArr","Array","isArray","tmpArr","translatedFileInfo","File","find","objURL","URL","createObjectURL","__Xr_objURL_forCreatingFile__","revokeObjectURL","createElement","download","click","_NAME","_PURPOSE","TranslationApiStore","requestApiKey","RootStore","StoreContext","StoreProvider","Provider","useStores","useCustomTableStyles","maxHeight","toolbarRoot","toolbarTitle","flex","uploadButton","input","highlight","lighten","headerRoot","idCell","nameCell","sizeCell","returnFileSize","Math","floor","pow","toFixed","clsx","endIcon","multiple","accept","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","indeterminate","TableBody","isItemSelected","hover","handleClick","role","selected","downloadButton","useBodyStyles","leftBox","rightBox","middleBox","columFlexBox","justifyContent","alignCenter","translateBtn","useGetApiKeyStyles","boldText","usageTitle","usageContent","usageText","apiExampleBox","apiExampleContent","apiExampleText","apiHead","apiForm","apiProtocol","registrationTitle","registrationBox","registrationBtn","setPurpose","applicant","InputLabel","createMuiTheme","primary","dark","light","contrastText","overrides","MuiButton","App","useCookies","setCookie","undefined","SnackbarProps","anchorOrigin","vertical","horizontal","exact","TranslationApiView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e93ce831.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 236;","import React, { Component, useState, useEffect } from 'react';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#58a0d1',\r\n    },\r\n    contentGrid: {\r\n        paddingLeft: '3%',\r\n        width: '40%',\r\n    },\r\n    accountGrid: {\r\n        width: '60%',\r\n    },\r\n    title: {\r\n        fontSize: '18px',\r\n        fontWeight: 600,\r\n    },\r\n    contentArea: {\r\n        paddingTop: '5%',\r\n        width: '100%',\r\n        height: '100%',\r\n        minHeight: '80%',\r\n        minWidth: '100%',\r\n        position: 'sticky',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n    },\r\n    iconBtn: {\r\n        color: 'white',\r\n    },\r\n    accountIcon: {\r\n        float: 'right',\r\n    },\r\n}));\r\n\r\nfunction HomeLayout(props) {\r\n    const { children } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyle();\r\n    const cookies = props.cookies;\r\n    const setHasCookie = props.setHasCookie;\r\n    const removeCookie = props.removeCookie;\r\n    const hasCookie = props.hasCookie;\r\n\r\n    const logout = () => {\r\n        setHasCookie(false)\r\n        removeCookie('loginAuth', { path: '/' })\r\n        \r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar className={classes.toolBar} alignItems=\"flex-end\" position=\"fixed\">\r\n                    <Grid\r\n                        className={classes.contentGrid}\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-between\"\r\n                        alignItems=\"flex-start\"\r\n                    >\r\n                        <Link\r\n                            to={{\r\n                                pathname: '/buk-pago',\r\n                            }}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <Button className={classes.title} size=\"large\">\r\n                                北파고\r\n                            </Button>\r\n                        </Link>\r\n                        <Link\r\n                            to={{\r\n                                pathname: '/buk-pago/file-translate',\r\n                            }}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <Button className={classes.title} size=\"large\">\r\n                                파일번역\r\n                            </Button>\r\n                        </Link>\r\n                        <Link\r\n                            to={{\r\n                                pathname: '/buk-pago/dictionary',\r\n                            }}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <Button className={classes.title} size=\"large\">\r\n                                북한말 사전\r\n                            </Button>\r\n                        </Link>\r\n                        <Link\r\n                            to={{\r\n                                pathname: '/buk-pago/train',\r\n                            }}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <Button className={classes.title} size=\"large\">\r\n                                北파고 Train\r\n                            </Button>\r\n                        </Link>\r\n                        <Link\r\n                            to={{\r\n                                pathname: '/buk-pago/api'\r\n                            }}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <Button className={classes.title} size='large'>\r\n                                北파고 API\r\n                            </Button>\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid\r\n                        className={classes.accountGrid}\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"flex-end\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <div className={classes.accountIcon}>\r\n                            {hasCookie == false ? (\r\n                                <div>\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: '/buk-pago/signIn',\r\n                                        }}\r\n                                        style={{ textDecoration: 'none' }}\r\n                                    >\r\n                                        <Button className={classes.title} variant=\"contained\">\r\n                                            로그인\r\n                                        </Button>\r\n                                    </Link>\r\n                                </div>\r\n                            ) : (\r\n                                <div>\r\n\r\n                                    <IconButton onClick={logout} >\r\n                                        <ExitToAppIcon fontSize=\"large\" className={classes.iconBtn} />\r\n                                    </IconButton>\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: '/buk-pago/myPage',\r\n                                        }}\r\n                                        style={{ textDecoration: 'none' }}\r\n                                    >\r\n                                        <IconButton\r\n                                            className={classes.accountIcon}\r\n                                        >\r\n                                            <AccountCircle fontSize=\"large\" className={classes.iconBtn} />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.contentArea}>{children}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeLayout;\r\n","import axios from 'axios'\r\n\r\nexport default async function requestTranslate(_NK, _code) {\r\n    return await axios.get(\r\n        '/api/translator',{ params: { NK: _NK, code: _code } }, { withCredentials: true }\r\n    ).catch(error => {return error}).then(res => {\r\n        if(res.data != null){\r\n            return res.data.result\r\n        }\r\n    })\r\n}\r\n\r\nexport async function requestGetApiKey(name, perpose)\r\n{\r\n    return await axios.post(\r\n        '/api/bukpagoAPI/',{name : name, perpose : perpose} \r\n    ).catch(error => {return error}).then(res => {\r\n        console.log(res);\r\n        return res\r\n    })\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport { createContext } from 'react';\r\nimport requestTranslate,{requestGetApiKey} from '../controllers/TranslationController';\r\n\r\n\r\nclass TranslationStore {\r\n    @observable translates = [];\r\n    static instance = null;\r\n\r\n    constructor() {\r\n        this.context = createContext(this);\r\n    }\r\n    static getInstance() {\r\n        if (!TranslationStore.instance) this.instance = new TranslationStore();\r\n        return TranslationStore.instance;\r\n    }\r\n\r\n    @action\r\n    translate(northText, code) {\r\n        return requestTranslate(northText, code)\r\n    }\r\n\r\n\r\n    @action\r\n    getApiKey(name, purpose) {\r\n        return requestGetApiKey(name, purpose).then((res) => {\r\n            return res;\r\n        })\r\n    }\r\n\r\n\r\n}\r\nexport default TranslationStore = TranslationStore.getInstance();\r\n","import axios from 'axios';\r\nimport Train from '../models/Train';\r\n\r\nexport  async function requestTransLike(_isLike, _NK, _SK) {\r\n    return await axios\r\n        .post(\r\n            '/api/evaluation/',\r\n            { params: {NK: _NK, SK: _SK , isGood: _isLike, } },\r\n            { withCredentials: true },\r\n        )\r\n        .catch((error) => {\r\n            return error;\r\n        })\r\n        .then((res) => {\r\n            return res.data;\r\n        });\r\n}\r\n\r\nexport default async function requestGetTestCase() {\r\n    return await axios\r\n        .get('/api/evaluation/', { withCredentials: true })\r\n        .catch((error) => {\r\n            return error;\r\n        })\r\n        .then((result)=> {return result});\r\n}\r\n\r\nexport async function requestTransOffer(_NK, _SK,) {\r\n    return await axios\r\n        .post('api/evaluation/translate/suggestion', { params: { NK: _NK, SK: _SK } }, { withCredentials: true })\r\n        .catch((error) => {\r\n            return error;\r\n        })\r\n        .then((res) => {\r\n            return res.data;\r\n        });\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport { createContext } from 'react';\r\nimport requestGetTestCase , {requestTransLike,requestTransOffer }from '../controllers/TrainController';\r\n\r\n\r\nclass TrainStore {\r\n    @observable trains = [];\r\n    static instance = null;\r\n\r\n    constructor() {\r\n        this.context = createContext(this);\r\n    }\r\n\r\n    static getInstance() {\r\n        if (!TrainStore.instance) this.instance = new TrainStore();\r\n        return TrainStore.instance;\r\n    }\r\n\r\n    @action\r\n    transLike(isLike, inputText, outputText){\r\n        \r\n        return requestTransLike(isLike, inputText, outputText).then(res => {\r\n            return res\r\n        })\r\n    }\r\n\r\n    @action\r\n    getTestCase(){\r\n        return requestGetTestCase().then(result=>{\r\n            return result\r\n        })\r\n    }\r\n\r\n    @action\r\n    transOffer(inputText,outputText){\r\n        return requestTransOffer(inputText,outputText).then(res => {\r\n            return res\r\n        })\r\n    }\r\n}\r\n\r\nexport default TrainStore = TrainStore.getInstance();\r\n","import React, { useState } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport TranslationStore from '../stores/TranslationStore';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport TrainStore from '../stores/TrainStore';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '99%',\r\n        height: '100%',\r\n        display: 'inline-block',\r\n    },\r\n    title: {\r\n        paddingTop: '2%',\r\n        textAlign: 'center',\r\n        fontWeight: 600,\r\n    },\r\n    content: {\r\n        paddingTop: '1%',\r\n    },\r\n    paper: {\r\n        marginTop: '1%',\r\n        width: '35%',\r\n        height: '50%',\r\n        position: 'relative',\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        float: 'right',\r\n    },\r\n    box: {\r\n        //display: 'flex',\r\n        //flex: 1,\r\n        //flexDirection: 'row-reverse',\r\n    },\r\n    textLength: {\r\n        position: 'absolute',\r\n        right: '2%',\r\n        bottom: '10%',\r\n    },\r\n    clearButton: {\r\n        position: 'absolute',\r\n        right: '0%',\r\n        top: '0%',\r\n    },\r\n    bukPaper: {\r\n        textAlign: 'center',\r\n        width: '10%',\r\n        backgroundColor: '#ffd6d6',\r\n    },\r\n    namPaper: {\r\n        textAlign: 'center',\r\n        width: '10%',\r\n        backgroundColor: '#d6f8ff',\r\n    },\r\n    upDownBtn: {\r\n        float: 'left',\r\n    },\r\n});\r\n\r\nexport default function TranslationView(props) {\r\n    const classes = useStyles();\r\n    const [inputText, setInputText] = useState('');\r\n    const [inputTextLength, setInputTextLength] = useState(0);\r\n    const [outputTextLength, setOutputTextLength] = useState(0);\r\n    const [outputText, setOutputText] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [content, setContent] = useState('');\r\n    const [severity, setSeverity] = useState('success');\r\n    const [translateState, setTranslateState] = useState(false);\r\n    const maxTextLength = 3000;\r\n    const translationStore = React.useContext(TranslationStore.context);\r\n    const trainStore = React.useContext(TrainStore.context);\r\n    const [code, setCode] = useState(false);\r\n    const [transCode, setTransCode] = useState('맞춤법 검사')\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.checked == true)\r\n        {\r\n            setTransCode('기계 번역')\r\n            setCode(true)\r\n        }\r\n        else{\r\n            setTransCode('맞춤법 검사')\r\n            setCode(false)\r\n        }\r\n    }\r\n    const onInputChange = (e) => {\r\n        const str = e.target.value;\r\n        setTranslateState(false);\r\n        if (str.length <= maxTextLength) {\r\n            setInputText(str);\r\n            setInputTextLength(str.length);\r\n        } else {\r\n            setContent('3000자 이하만 입력 가능합니다.');\r\n            setSeverity('warning');\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    const onOutputChange = (e) => {\r\n        const str = e.target.value;\r\n        if (str.length <= maxTextLength) {\r\n            setOutputText(str);\r\n            setOutputTextLength(str.length);\r\n        } else {\r\n            setContent('3000자 이하만 입력 가능합니다.');\r\n            setSeverity('warning');\r\n            setOpen(true);\r\n        }\r\n    };\r\n    const textClear = () => {\r\n        setInputText('');\r\n        setInputTextLength(0);\r\n        setTranslateState(false);\r\n        setOutputText('');\r\n    };\r\n\r\n    const copyText = () => {\r\n        navigator.clipboard.writeText(outputText);\r\n        setContent('복사가 완료되었습니다.');\r\n        setSeverity('success');\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const transLike = () => {\r\n        trainStore\r\n            .transLike(true, inputText, outputText)\r\n            .then((result) => {\r\n                console.log(result);\r\n                setContent('피드백 감사합니다! :)');\r\n                setSeverity('success');\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const transDislike = () => {\r\n        trainStore\r\n            .transLike(false, inputText, outputText)\r\n            .then((result) => {\r\n                setContent('피드백 감사합니다! :)');\r\n                setSeverity('success');\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const translate = () => {\r\n        if(inputText.length <4)\r\n        {\r\n            setContent('4글자 이상 작성해주세요!');\r\n            setSeverity('error');\r\n            setOpen(true);\r\n            setTranslateState(false);\r\n        }\r\n        else\r\n        {\r\n            translationStore\r\n            .translate(inputText, code)\r\n            .then((result) => {\r\n                setOutputText(result);\r\n                setTranslateState(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        }\r\n        \r\n    };\r\n\r\n    const transOffer = () => {\r\n        console.log(outputText)\r\n        trainStore\r\n            .transOffer(inputText, outputText)\r\n            .then((result) => {\r\n                setContent('피드백 감사합니다! :)');\r\n                setSeverity('success');\r\n                setOpen(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>\r\n                <Typography className={classes.title} variant=\"h3\">\r\n                    북한어 번역\r\n                </Typography>\r\n                \r\n            </div>\r\n            <br />\r\n            <div className={classes.content}>\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n\r\n                <Switch\r\n                    checked={code}\r\n                    onChange={handleChange}\r\n                    name=\"checkedA\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                /> \r\n                <div>\r\n                <Typography  variant=\"h6\">\r\n                    {transCode}\r\n                </Typography>\r\n                </div>\r\n                \r\n            </Grid>\r\n                \r\n                \r\n                <Grid\r\n                    className={classes.grid}\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Paper className={classes.bukPaper}>\r\n                        <Typography variant=\"h5\">북한어</Typography>\r\n                    </Paper>\r\n                    <Paper className={classes.namPaper}>\r\n                        <Typography variant=\"h5\">남한어</Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                    \r\n                    <Paper className={classes.paper}>\r\n                        <TextField\r\n                            className={classes.textField}\r\n                            id=\"outlined-multiline-static\"\r\n                            multiline\r\n                            autoFocus\r\n                            rows={17}\r\n                            onChange={onInputChange}\r\n                            value={inputText}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Typography className={classes.textLength}>\r\n                            {inputTextLength} / {maxTextLength}\r\n                        </Typography>\r\n                        <Box className={classes.box}>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                disableRipple\r\n                                onClick={translate}\r\n                                color=\"primary\"\r\n                            >\r\n                                번역하기\r\n                            </Button>\r\n                            {inputTextLength == 0 ? null : (\r\n                                <IconButton\r\n                                    className={classes.clearButton}\r\n                                    variant=\"contained\"\r\n                                    onClick={textClear}\r\n                                >\r\n                                    <ClearIcon></ClearIcon>\r\n                                </IconButton>\r\n                            )}\r\n                        </Box>\r\n                    </Paper>\r\n\r\n                    <Paper className={classes.paper}>\r\n                        {translateState == false ? (\r\n                            <TextField\r\n                                className={classes.textField}\r\n                                id=\"outlined-multiline-static\"\r\n                                multiline\r\n                                rows={17}\r\n                                variant=\"outlined\"\r\n                                InputProps={{\r\n                                    readOnly: true,\r\n                                }}\r\n                                value={outputText}\r\n                            />\r\n                        ) : (\r\n                            <TextField\r\n                                className={classes.textField}\r\n                                id=\"outlined-multiline-static\"\r\n                                multiline\r\n                                rows={17}\r\n                                variant=\"outlined\"\r\n                                value={outputText}\r\n                                onChange={onOutputChange}\r\n                            />\r\n                        )}\r\n                        <Box className={classes.box}>\r\n                            {translateState == false ? null : (\r\n                                <ButtonGroup\r\n                                    color=\"primary\"\r\n                                    aria-label=\"outlined primary button group\"\r\n                                >\r\n                                    <Button\r\n                                        className={classes.upDownBtn}\r\n                                        disableRipple\r\n                                        color=\"primary\"\r\n                                        onClick={transLike}\r\n                                    >\r\n                                        <ThumbUpAltIcon></ThumbUpAltIcon>\r\n                                    </Button>\r\n                                    <Button\r\n                                        className={classes.upDownBtn}\r\n                                        disableRipple\r\n                                        color=\"primary\"\r\n                                        onClick={transDislike}\r\n                                    >\r\n                                        <ThumbDownAltIcon></ThumbDownAltIcon>\r\n                                    </Button>\r\n                                    <Button\r\n                                        className={classes.upDownBtn}\r\n                                        disableRipple\r\n                                        color=\"primary\"\r\n                                        onClick={transOffer}\r\n                                    >\r\n                                        수정하기\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            )}\r\n\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                disableRipple\r\n                                color=\"primary\"\r\n                                onClick={copyText}\r\n                            >\r\n                                <FileCopyIcon></FileCopyIcon>\r\n                            </Button>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n                <Snackbar\r\n                    open={open}\r\n                    autoHideDuration={1100}\r\n                    onClose={handleClose}\r\n                    content={content}\r\n                    severity={severity}\r\n                >\r\n                    <Alert onClose={handleClose} severity={severity}>\r\n                        {content}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export default class Member {\r\n    constructor(id,pw,name,email,isAdmin,evaluationCount) {\r\n        this.id = id\r\n        this.pw = pw\r\n        this.name = name\r\n        this.email = email\r\n        this.isAdmin = isAdmin\r\n        this.evaluationCount = evaluationCount\r\n    }\r\n}","import axios from 'axios';\r\nimport Member from '../models/Member';\r\n\r\nexport default async function requestLogin(_id, _pw) {\r\n    return await axios\r\n        .post('/api/member/login', { id: _id, pw: _pw })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n        .catch((err) => {\r\n            return err;\r\n        });\r\n}\r\n\r\nexport async function requestSignUp(id, pw, name, email) {\r\n    return await axios\r\n        .post('/api/member/signUp', {\r\n            pw: pw,\r\n            id: id,\r\n            name: name,\r\n            email: email,\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n        .catch((err) => {\r\n            return err;\r\n        });\r\n}\r\n\r\nexport async function requestGetRanker() {\r\n    return await axios\r\n        .get('/api/evaluation/rank')\r\n        .catch((error) => {\r\n            return error;\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        });\r\n}\r\n\r\nexport async function requestGetUserInfo() {\r\n    return await axios\r\n        .get('/api/member/user')\r\n        .catch((error) => {\r\n            return error;\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n}\r\n\r\nexport async function requestGetMyRank() {\r\n    return await axios\r\n        .get('/api/member/rank')\r\n        .catch((error) => {\r\n            return error;\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n}\r\n\r\nexport async function requestUpdateUser(id,name,email) {\r\n    const member = new Member(id,\"\",name,email);\r\n\r\n    return await axios\r\n        .put('/api/member/user',{member : member})\r\n        .catch((error) => {\r\n            return error;\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n}\r\n\r\nexport async function requsetGetKey() {\r\n\r\n    return await axios.get('/api/bukpagoAPI/',)\r\n        .catch((error) => {\r\n            return error;\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n}\r\n\r\nexport async function requsetUpdateKey() {\r\n    return await axios\r\n        .put('/api/bukpagoAPI')\r\n        .catch((error) => {\r\n            return error;\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n}\r\n\r\n","import { action, observable } from 'mobx';\r\nimport { createContext } from 'react';\r\nimport requestLogin, { requestSignUp, requestGetRanker,requestGetUserInfo,requestGetMyRank,requestUpdateUser,requsetUpdateKey,requsetGetKey } from '../controllers/MemberController';\r\nimport Member from '../models/Member';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nclass MemberStore {\r\n    @observable members = [];\r\n    static instance = null;\r\n    constructor() {\r\n        this.context = createContext(this);\r\n    }\r\n    static getInstance() {\r\n        if (!MemberStore.instance) this.instance = new MemberStore();\r\n        return MemberStore.instance;\r\n    }\r\n\r\n    @action\r\n    register(id, pw, name, email) {\r\n        return requestSignUp(id, pw, name, email).then((result) => {\r\n            return result;\r\n        });\r\n    }\r\n\r\n    @action\r\n    login(id, pw) {\r\n        return requestLogin(id, pw).then((result) => {\r\n            return result;\r\n        });\r\n    }\r\n\r\n    @action\r\n    getRanker() {\r\n        return requestGetRanker().then((result) => {\r\n            return result;\r\n        });\r\n    }\r\n\r\n    @action\r\n    getUserInfo(){\r\n        return requestGetUserInfo().then((result)=> {\r\n            return result;\r\n        })\r\n    }\r\n\r\n    @action\r\n    getMyRank() {\r\n        return requestGetMyRank().then((result) => {\r\n            return result;\r\n        })\r\n    }\r\n\r\n    @action\r\n    updateUser(id,name,email){\r\n        return requestUpdateUser(id,name,email).then((result) => {\r\n            return result;\r\n        })\r\n    }\r\n\r\n    @action\r\n    updateKey(){\r\n        return requsetUpdateKey().then((result) => {\r\n            return result;\r\n        })\r\n    }\r\n\r\n    @action\r\n    getApiKey() {\r\n        return requsetGetKey().then((result) => {\r\n            return result;\r\n        })\r\n    }\r\n}\r\nexport default MemberStore = MemberStore.getInstance();\r\n","import React, { useRef, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport MemberStore from '../stores/MemberStore';\r\nimport Member from '../models/Member';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'material-ui-snackbar-provider';\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUpView(props) {\r\n    const classes = useStyles();\r\n    const memberStore = useContext(MemberStore.context);\r\n    const id = useRef('');\r\n    const pw = useRef('');\r\n    const name = useRef('');\r\n    const email = useRef('');\r\n    const snackbar = useSnackbar();\r\n    let history = useHistory();\r\n\r\n\r\n    function register(e) {\r\n        e.preventDefault();\r\n        if (name.current.value === '') {\r\n            snackbar.showMessage(\r\n                '닉네임을 입력해 주세요',\r\n                '확인'\r\n            )\r\n        }\r\n        if (id.current.value === '') {\r\n            snackbar.showMessage(\r\n                '아이디를 입력해 주세요',\r\n                '확인'\r\n            )\r\n        }\r\n        if (pw.current.value === '') {\r\n            snackbar.showMessage(\r\n                '비밀번호를 입력해주세요',\r\n                '확인'\r\n            )\r\n        }\r\n        if (email.current.value === '') {\r\n            snackbar.showMessage(\r\n                '이메일을 입력해 주세요',\r\n                '확인'\r\n            )\r\n        }\r\n\r\n        var member = new Member(\r\n            id.current.value,\r\n            pw.current.value,\r\n            name.current.value,\r\n            email.current.value,\r\n        );\r\n\r\n        console.log(member);\r\n        memberStore.register(member).then((res) => {\r\n            if (res.status === 200) {\r\n                try {\r\n                    snackbar.showMessage(\r\n                        res.data.message,\r\n                    )\r\n                } catch {\r\n                    snackbar.showMessage(\r\n                        '회원가입 성공!',\r\n                    )\r\n                }\r\n                setTimeout(() => history.push('/buk-pago/signIn'), 2000);\r\n            } else {\r\n                try {\r\n                    snackbar.showMessage(\r\n                        res.data.message,\r\n                    )\r\n                } catch {\r\n                    snackbar.showMessage(\r\n                        '회원가입 실패',\r\n                    )\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    회원가입\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"닉네임\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={name}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"아이디\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={id}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={pw}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"이메일\"\r\n                                autoComplete=\"email\"\r\n                                inputRef={email}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={register}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/buk-pago/signIn\" variant=\"body2\">\r\n                                계정이 이미 있으신가요?\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useRef, useContext } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport { observer } from 'mobx-react';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport MemberStore from '../stores/MemberStore';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'material-ui-snackbar-provider'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst SignInView = observer((props) => {\r\n    const classes = useStyles();\r\n    const memberStore = useContext(MemberStore.context);\r\n    const id = useRef('');\r\n    const pw = useRef('');\r\n    const setHasCookie = props.setHasCookie;\r\n    let history = useHistory();\r\n    const snackbar = useSnackbar();\r\n\r\n    function login(e) {\r\n        e.preventDefault();\r\n        if (id.current.value === '' || pw.current.value === '') {\r\n            snackbar.showMessage(\r\n                '아이디 또는 비밀 번호를 입력해 주세요.',\r\n                '확인'\r\n            )\r\n        }\r\n        memberStore.login(id.current.value, pw.current.value).then((res) => {\r\n            if (res.status == 200) {\r\n                setHasCookie(true);\r\n                history.push('/buk-pago');\r\n                snackbar.showMessage(\r\n                    res.data.message,\r\n                )\r\n            } else {\r\n                snackbar.showMessage(\r\n                '아이디 또는 비밀 번호를 확인해 주세요.',\r\n                '확인'\r\n            )\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    로그인\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"id\"\r\n                        autoComplete=\"current-id\"\r\n                        autoFocus\r\n                        inputRef={id}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        inputRef={pw}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={login}\r\n                    >\r\n                        로그인\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/buk-pago/signUp\" variant=\"body2\">\r\n                                {'회원가입 하기'}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default SignInView;\r\n","export default class Dictionary {\r\n    constructor(NK, SK, mean) {\r\n        this.NK = NK;\r\n        this.SK = SK;\r\n        this.mean = mean;\r\n    }\r\n\r\n    get_dic() {\r\n        return {\r\n            id: this.NK,\r\n            south: this.SK,\r\n            mean: this.mean,\r\n        };\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport Dictionary from '../models/Dictionary';\r\n\r\nexport default async function requestGetDictionary() {\r\n    return await axios\r\n        .get('/api/dictionary/dictionary', { withCredentials: true })\r\n        .catch((error) => {\r\n            console.warn(error);\r\n            return [];\r\n        })\r\n        .then((result) => {\r\n            var data = [];\r\n            if (result.data != null) {\r\n                var tmp = result.data.data;\r\n                Object.keys(tmp).map((key, index) =>\r\n                    data.push(\r\n                        new Dictionary(tmp[key]['NK'], tmp[key]['SK'], tmp[key]['mean']).get_dic(),\r\n                    ),\r\n                );\r\n                return data;\r\n            }\r\n            return [];\r\n        });\r\n}\r\n\r\nexport async function requestSearchDictionary(_code, _query) {\r\n    return await axios\r\n        .get(\r\n            '/api/dictionary/search',\r\n            { params: { code: _code, query: _query } },\r\n            { withCredentials: true },\r\n        )\r\n        .catch((error) => {\r\n            console.warn(error);\r\n            return [];\r\n        })\r\n        .then((result) => {\r\n            var data = [];\r\n            console.log(result);\r\n            if (result.data.data != []) {\r\n                var tmp = result.data.data;\r\n                Object.keys(tmp).map((key, index) =>\r\n                    data.push(\r\n                        new Dictionary(tmp[key]['NK'], tmp[key]['SK'], tmp[key]['mean']).get_dic(),\r\n                    ),\r\n                );\r\n\r\n                return data;\r\n            }\r\n            return [];\r\n        });\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport { createContext } from 'react';\r\nimport requestGetDictionary, { requestSearchDictionary } from '../controllers/DictionaryController';\r\n\r\nclass DictionaryStore {\r\n    @observable dictionarys = [];\r\n    static instance = null;\r\n\r\n    constructor() {\r\n        this.context = createContext(this);\r\n    }\r\n    static getInstance() {\r\n        if (!DictionaryStore.instance) this.instance = new DictionaryStore();\r\n        return DictionaryStore.instance;\r\n    }\r\n\r\n    @action\r\n    getDictionary() {\r\n        return requestGetDictionary().then((result) => {\r\n            this.dictionarys = [...result];\r\n            \r\n        });\r\n    }\r\n\r\n    @action\r\n    searchDic(code, query) {\r\n        return requestSearchDictionary(code, query).then((result) => {\r\n            this.dictionarys = [...result];\r\n        });\r\n    }\r\n}\r\nexport default DictionaryStore = DictionaryStore.getInstance();\r\n","import React, { useEffect, useRef, useState, useContext } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DictionaryStore from '../stores/DictionaryStore';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { isConstructorDeclaration } from 'typescript';\r\nimport { observer } from 'mobx-react';\r\nimport { render } from '@testing-library/react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nvar elem = document.compatMode === 'CSS1Compat' ? document.documentElement : document.body;\r\n\r\nvar height = elem.clientHeight;\r\nvar width = elem.clientWidth;\r\n\r\nfunction getWidth(tableRate, rate) {\r\n    return width * tableRate * rate;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '99%',\r\n        height: '100%',\r\n        display: 'inline-block',\r\n    },\r\n    title: {\r\n        paddingTop: '2%',\r\n        textAlign: 'center',\r\n        fontWeight: 600,\r\n        paddingBottom: '1%',\r\n    },\r\n    table: {\r\n        paddingTop: '1%',\r\n        height: height * 0.6,\r\n        width: '75%',\r\n    },\r\n    search: {\r\n        width: '50%',\r\n    },\r\n});\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: '북한어', width: getWidth(0.75, 2 / 9) },\r\n    { field: 'south', headerName: '남한어', width: getWidth(0.75, 2 / 9) },\r\n    { field: 'mean', headerName: '뜻', width: getWidth(0.75, 5 / 10) },\r\n];\r\n\r\nconst DictionaryView = observer((props) => {\r\n    \r\n    const classes = useStyles();\r\n    const dictionaryStore = useContext(DictionaryStore.context);\r\n    const [inputText, setInputText] = useState('');\r\n    const [code, setCode] = useState(1);\r\n    let history = useHistory();\r\n    const render = () => {\r\n        console.log(\"랜더링\")\r\n        setInputText('');\r\n        setCode(1)\r\n    }\r\n    const onChange = (e) => {\r\n        const str = e.target.value;\r\n        setInputText(str);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setCode(event.target.value);\r\n    };\r\n\r\n    const search = () => {\r\n        dictionaryStore.searchDic(code, inputText).then((res)=>{\r\n            console.log(dictionaryStore.dictionarys);\r\n            render();\r\n        })\r\n       \r\n    };\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            search();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dictionaryStore.getDictionary().then((res)=>{\r\n            history.push('/buk-pago/dictionary');\r\n        })\r\n        \r\n    },[]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>\r\n                <Typography className={classes.title} variant=\"h3\">\r\n                    북한말 사전\r\n                </Typography>\r\n                <div>\r\n                    <FormControl className={classes.formControl}>\r\n                        <Select value={code} onChange={handleChange}>\r\n                            <MenuItem value={1}>북한어</MenuItem>\r\n                            <MenuItem value={2}>남한어</MenuItem>\r\n                            <MenuItem value={3}>뜻</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <TextField\r\n                        className={classes.search}\r\n                        id=\"standard-search\"\r\n                        type=\"search\"\r\n                        onKeyPress={handleKeyDown}\r\n                        onChange={onChange}\r\n                    />\r\n                    <SearchIcon onClick={search} />\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div className={classes.content}>\r\n                <Grid\r\n                    className={classes.grid}\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <div className={classes.table}>\r\n                        <DataGrid\r\n                            columns={columns}\r\n                            rows={dictionaryStore.dictionarys}\r\n                            pageSize={8}\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default DictionaryView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport MemberStore from '../stores/MemberStore';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport TrainStore from '../stores/TrainStore';\r\nimport { useHistory } from 'react-router';\r\nimport { useSnackbar } from 'material-ui-snackbar-provider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '99%',\r\n        height: '100%',\r\n        display: 'inline-block',\r\n    },\r\n    title: {\r\n        paddingTop: '2%',\r\n        textAlign: 'center',\r\n        fontWeight: 600,\r\n    },\r\n    trainText: {\r\n        paddingTop: '2%',\r\n        fontWeight: 600,\r\n    },\r\n    content: {\r\n        paddingTop: '2%',\r\n    },\r\n    mainContent: {\r\n        width: '100%',\r\n    },\r\n    testCard: {\r\n        marginTop: '3%',\r\n        width: '50%',\r\n        height: '50%',\r\n        marginLeft: '10%',\r\n    },\r\n    card: {\r\n        padding: '2%',\r\n    },\r\n    pass: {\r\n        float: 'right',\r\n        marginRight: '2%',\r\n        backgroundColor: '#228b22',\r\n        fontWeight: '600'\r\n    },\r\n    cardGrid: {\r\n        marginTop: '5%',\r\n        width: '100%',\r\n    },\r\n    rankingCard: {\r\n        width: '20%',\r\n        marginLeft: '7%',\r\n    },\r\n    mainGrid: {\r\n        width: '100%',\r\n    },\r\n    ranking: {\r\n        paddingBottom: '5%',\r\n        marginTop: '15%',\r\n    },\r\n    rankingNum: {\r\n        marginTop: '10%',\r\n    },\r\n});\r\n\r\nexport default function TranslationView(props) {\r\n    const classes = useStyles();\r\n    const trainStore = React.useContext(TrainStore.context);\r\n    const memberStore = React.useContext(MemberStore.context);\r\n    const [inputText, setInputText] = useState('병렬코퍼스 로딩중 ...');\r\n    const [outputText, setOutputText] = useState('...');\r\n    const [ranking, setRanking] = useState([\r\n        '랭킹 로딩중'\r\n    ]);\r\n    const [open, setOpen] = useState(false);\r\n    const [content, setContent] = useState('');\r\n    const [severity, setSeverity] = useState('success');\r\n    let history = useHistory();\r\n    const snackbar = useSnackbar();\r\n    const hasCookie = props.hasCookie;\r\n\r\n    const getTestCase = () => {\r\n        if (!hasCookie) {\r\n            snackbar.showMessage(\r\n                '북파고 트레인은 로그인이 필요한 서비스 입니다.',\r\n                '확인', () => history.push('/buk-pago/signIn')\r\n            )\r\n        } else {\r\n            trainStore.getTestCase().then(result => {\r\n                setInputText(result.data.NK)\r\n                setOutputText(result.data.SK)\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTestCase();\r\n        \r\n        memberStore.getRanker().then(result=>{\r\n         \r\n            if(result.data.data.length >0 )\r\n            {\r\n                setRanking(result.data.data)\r\n            }\r\n            else {\r\n                setRanking(['주오짱짱123'])\r\n            }\r\n            console.log(ranking)\r\n        });\r\n\r\n    }, []);\r\n\r\n    const transLike = () => {\r\n        if (!hasCookie) {\r\n            snackbar.showMessage(\r\n                '북파고 트레인은 로그인이 필요한 서비스 입니다.',\r\n                '확인', () => history.push('/buk-pago/signIn')\r\n            )\r\n            setTimeout(() => history.push('/buk-pago/signIn'), 2000);\r\n        } else {\r\n            trainStore\r\n                .transLike(true, inputText, outputText)\r\n                .then((result) => {\r\n                    setContent('피드백 감사합니다! :)');\r\n                    setSeverity('success');\r\n                    setOpen(true);\r\n                    getTestCase();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    const transDislike = () => {\r\n        if (!hasCookie) {\r\n            snackbar.showMessage(\r\n                '북파고 트레인은 로그인이 필요한 서비스 입니다.',\r\n                '확인', () => history.push('/buk-pago/signIn')\r\n            )\r\n            setTimeout(() => history.push('/buk-pago/signIn'), 2000);\r\n        } else {\r\n            trainStore\r\n                .transLike(false, inputText, outputText)\r\n                .then((result) => {\r\n                    setContent('피드백 감사합니다! :)');\r\n                    setSeverity('success');\r\n                    setOpen(true);\r\n                    getTestCase();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>\r\n                <Typography className={classes.title} variant=\"h3\">\r\n                    北파고 트레이닝\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.content}>\r\n                <div className={classes.mainContent}>\r\n                    <Grid className={classes.mainGrid} container direction=\"row\">\r\n                        <div className={classes.testCard}>\r\n                            <Card className={classes.card}>\r\n                                <CardContent>\r\n                                    <Typography className={classes.trainText} variant=\"h5\">\r\n                                        {inputText}\r\n                                    </Typography>\r\n                                    <br />\r\n                                    <Typography variant=\"h6\">{outputText}</Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Grid\r\n                                        className={classes.cardGrid}\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"center\"\r\n                                        spacing={4}\r\n                                    >\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                disableRipple\r\n                                                size=\"large\"\r\n                                                onClick={transLike}\r\n                                            >\r\n                                                <ThumbDownAltIcon></ThumbDownAltIcon>\r\n                                            </Button>\r\n                                        </Grid>\r\n\r\n                                        <Grid item>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                disableRipple\r\n                                                size=\"large\"\r\n                                                onClick={transDislike}\r\n                                            >\r\n                                                <ThumbUpAltIcon></ThumbUpAltIcon>\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardActions>\r\n                                <div>\r\n                                    <Tooltip\r\n                                        className={classes.pass}\r\n                                        onClick={getTestCase}\r\n                                        disableHoverListener\r\n                                        title=\"Add\"\r\n                                    >\r\n                                        <Button>건너뛰기 → </Button>\r\n                                    </Tooltip>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n\r\n                        <div className={classes.rankingCard}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"center\"\r\n                                    >\r\n                                        <div>\r\n                                            <Grid container justify=\"center\" alignItems=\"center\">\r\n                                                <Typography className={classes.title} variant=\"h5\">\r\n                                                    오늘의 순위\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </div>\r\n                                        <div className={classes.ranking}>\r\n                                            <Grid\r\n                                                container\r\n                                                direction=\"column\"\r\n                                                justify=\"center\"\r\n                                                alignItems=\"center\"\r\n                                                spacing={7}\r\n                                            >\r\n                                                {ranking.map((value, idx) => {\r\n                                                    return (\r\n                                                        <div>\r\n                                                            <Typography\r\n                                                                className={classes.rankingNum}\r\n                                                                variant=\"h6\"\r\n                                                            >\r\n                                                                {idx + 1}. {value}\r\n                                                            </Typography>\r\n                                                        </div>\r\n                                                    );\r\n                                                })}\r\n                                            </Grid>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n                    </Grid>\r\n                </div>\r\n                <Snackbar\r\n                    open={open}\r\n                    autoHideDuration={1100}\r\n                    onClose={handleClose}\r\n                    content={content}\r\n                    severity={severity}\r\n                >\r\n                    <Alert onClose={handleClose} severity={severity}>\r\n                        {content}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MemberStore from '../stores/MemberStore'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useSnackbar } from 'material-ui-snackbar-provider'\r\n\r\nconst useStyles = makeStyles( (theme) => ({\r\n    \r\n    select : {\r\n        width : \"100%\"\r\n    },\r\n    label : {\r\n        marginTop : \"1.5%\",\r\n        fontSize : '0.8rem'\r\n    }\r\n}))\r\n\r\n\r\n\r\nexport default function MemberUpdateDialog(props) {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false);\r\n    const defult_id = props.id\r\n    const defult_name = props.name\r\n    const defult_email = props.email\r\n    const defult_key = props.apiKey\r\n    const id = useRef()\r\n    const name = useRef()\r\n    const email = useRef()\r\n    const memberStore = React.useContext(MemberStore.context)\r\n    const snackbar = useSnackbar();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        memberStore.updateUser(id.current.value,name.current.value,email.current.value).then(result => {\r\n            console.log(result)\r\n            if(result.status == 200)\r\n            {\r\n                window.location.reload();\r\n            }      \r\n            setOpen(false)\r\n            snackbar.showMessage(\r\n                result.data.message,\r\n            )\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n            회원정보수정\r\n        </Button>\r\n        <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">회원 정보 수정</DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"id\"\r\n                    inputRef={id}\r\n                    defaultValue={defult_id}\r\n                    label=\"아이디\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                    readOnly: true,\r\n                    }}\r\n                />\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    inputRef={name}\r\n                    defaultValue={defult_name}\r\n                    label=\"이름\"\r\n                    type=\"text\"\r\n                    multiline\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"email\"\r\n                    inputRef={email}\r\n                    defaultValue={defult_email}\r\n                    label=\"이메일\"\r\n                    type=\"text\"\r\n                    multiline\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"email\"\r\n                    defaultValue={defult_key}\r\n                    label=\"api 키\"\r\n                    type=\"text\"\r\n                    multiline\r\n                    fullWidth\r\n                    InputProps={{\r\n                    readOnly: true,\r\n                    }}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    수정\r\n                </Button> \r\n                <Button onClick={() => {setOpen(false) }} color=\"primary\">\r\n                    닫기\r\n                </Button>\r\n                \r\n            </DialogActions>\r\n            </Dialog>\r\n    </div>\r\n    );\r\n}\r\n","import React, { useEffect, useRef, useState, useContext,observer } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Tab, Typography } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport MemberStore from '../stores/MemberStore';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport TrainStore from '../stores/TrainStore';\r\nimport { SpaceBar } from '@material-ui/icons';\r\nimport { composeClasses } from '@material-ui/data-grid';\r\nimport MemberUpdateDialog from './MemberUpdateDialog';\r\n\r\n\r\n\r\nconst useStyles = makeStyles ( {\r\n    title: {\r\n\r\n        fontWeight: 600,\r\n    },\r\n    content: { \r\n        width: '99%',\r\n    },\r\n    card : {\r\n        marginLeft:'15%',\r\n        marginTop: '5%',\r\n        width : '70%',\r\n    },\r\n    contentGrid:{\r\n        marginLeft: '10%',\r\n    },\r\n    rankingContentGrid:{\r\n        marginTop : '5%',\r\n        marginLeft: '10%',\r\n    },\r\n    admin : {\r\n        marginLeft: '4%'\r\n    },\r\n    editButton : {\r\n        marginLeft: '82%'\r\n    },\r\n    percent : {\r\n        color: '#51c268'\r\n    },\r\n    degree : {\r\n\r\n    },\r\n    grid : {\r\n        width : '100%'\r\n    },\r\n    left : {\r\n        paddingTop : '5%',\r\n        width : '50%'\r\n    },\r\n    right : {\r\n        width: '50%'\r\n    },\r\n    rankingCard : {\r\n        width : '50%',\r\n        height : '100%'\r\n    }\r\n})\r\n\r\nexport default function ProfileCard(props){\r\n    const classes = useStyles();\r\n    const id=props.id\r\n    const name = props.name;\r\n    const isAdmin = props.isAdmin;\r\n    const email = props.email;\r\n    const apiKey = props.apiKey;\r\n\r\n    const [adminText,setAdminText] = useState('일반회원')\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAdmin == true)\r\n            setAdminText('관리자')\r\n    });\r\n    return(\r\n        <div className = {classes.root}>\r\n            <Card className={classes.card}>\r\n                        <CardContent>\r\n                            <Typography className={classes.title} variant=\"h4\">\r\n                                프로필\r\n                            </Typography>\r\n                            <br></br>\r\n                            <Grid>\r\n                                <div>\r\n                                    <Grid className={classes.contentGrid} \r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"flex-start\"\r\n                                        alignItems=\"center\">\r\n                                            \r\n                                        <div>\r\n                                            <Typography  className={classes.title} variant=\"h5\">\r\n                                                닉네임\r\n                                            </Typography>\r\n                                        </div>\r\n                                        <Tab></Tab>\r\n                                        <div>\r\n                                            <Typography  className={classes.title} variant=\"h6\">\r\n                                                {name}\r\n                                            </Typography>\r\n                                        </div>\r\n        \r\n                                    </Grid>\r\n                                \r\n                                </div>\r\n                                <div>\r\n                                    <Grid className={classes.contentGrid} \r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"flex-start\"\r\n                                        alignItems=\"center\">\r\n                                            \r\n                                        <div>\r\n                                            <Typography  className={classes.title} variant=\"h5\">\r\n                                                이메일\r\n                                            </Typography>\r\n                                        </div>\r\n                                        <Tab></Tab>\r\n                                        <div >\r\n                                            <Typography  className={classes.title} variant=\"h6\">\r\n                                                {email}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                \r\n                                </div>\r\n                                <div>\r\n                                    <Grid className={classes.contentGrid} \r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"flex-start\"\r\n                                        alignItems=\"center\">\r\n                                            \r\n                                        <div>\r\n                                            <Typography  className={classes.title} variant=\"h5\">\r\n                                                등급\r\n                                            </Typography>\r\n                                        </div>\r\n                                        <Tab></Tab>\r\n                                        <div className={classes.isAdmin}>\r\n                                            <Typography  className={classes.title} variant=\"h6\">\r\n                                                {adminText}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                \r\n                                </div>\r\n                            </Grid>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                            <MemberUpdateDialog className={classes.editButton} open={open} onClose = {handleClose} id = {id} name={name} email = {email} apiKey={apiKey}/>          \r\n                        </CardActions>\r\n                    </Card>     \r\n                       \r\n        </div>\r\n    )\r\n}","import React, { useEffect, useRef, useState, useContext,observer } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Tab, Typography } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\nconst useStyles = makeStyles ( {\r\n    title: {\r\n\r\n        fontWeight: 600,\r\n    },\r\n    content: { \r\n        width: '99%',\r\n    },\r\n    card : {\r\n        marginLeft:'15%',\r\n        marginTop: '5%',\r\n        width : '70%',\r\n    },\r\n    contentGrid:{\r\n        marginLeft: '10%',\r\n    },\r\n    rankingContentGrid:{\r\n        marginTop : '5%',\r\n        marginLeft: '10%',\r\n    },\r\n    admin : {\r\n        marginLeft: '4%'\r\n    },\r\n    editButton : {\r\n        marginLeft: '82%'\r\n    },\r\n    percent : {\r\n        color: '#51c268'\r\n    },\r\n    degree : {\r\n\r\n    },\r\n    grid : {\r\n        width : '100%'\r\n    },\r\n    left : {\r\n        paddingTop : '5%',\r\n        width : '50%'\r\n    },\r\n    right : {\r\n        width: '50%'\r\n    },\r\n    rankingCard : {\r\n        width : '50%',\r\n        height : '100%'\r\n    }\r\n})\r\n\r\nexport default function ProfileCard(props){\r\n    const classes = useStyles();\r\n    const percent = props.percent;\r\n    const ranking = props.ranking;\r\n\r\n    return(\r\n        <div className = {classes.root}>\r\n            <Card className={classes.card}>\r\n                <CardContent>\r\n                    <div>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            평가 랭킹    \r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.rankingContentGrid}>\r\n                        <Typography className={classes.percent} variant=\"h3\">\r\n                            상위 {percent}%\r\n                        </Typography>\r\n                        <Typography className={classes.degree} variant=\"h3\">\r\n                            {ranking}위\r\n                        </Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n                        \r\n        </div>\r\n    )\r\n}","import React, { useEffect, useRef, useState, useContext,observer } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Tab, Typography } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MemberStore from '../stores/MemberStore';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\n\r\nconst useStyles = makeStyles ( {\r\n    title: {\r\n\r\n        fontWeight: 600,\r\n    },\r\n\r\n    content: { \r\n        width: '99%',\r\n    },\r\n    card : {\r\n        marginLeft:'15%',\r\n        marginTop: '5%',\r\n        width : '70%',\r\n    },\r\n    contentGrid:{\r\n        marginLeft: '10%',\r\n    },\r\n    rankingContentGrid:{\r\n        marginTop : '5%',\r\n        marginLeft: '10%',\r\n    },\r\n    admin : {\r\n        marginLeft: '4%'\r\n    },\r\n    editButton : {\r\n        marginLeft: '82%'\r\n    },\r\n    percent : {\r\n        color: '#51c268'\r\n    },\r\n    degree : {\r\n\r\n    },\r\n    grid : {\r\n        width : '100%'\r\n    },\r\n    left : {\r\n        paddingTop : '5%',\r\n        width : '50%'\r\n    },\r\n    right : {\r\n        width: '50%'\r\n    },\r\n    rankingCard : {\r\n        width : '50%',\r\n        height : '100%'\r\n    }\r\n})\r\n\r\nexport default function EvaluatedView(props){\r\n    const classes = useStyles();\r\n    const element = props.element;\r\n    const nk = element.NKsentence;\r\n    const sk = element.SKsentence;\r\n    const isLike = element.evalResult;\r\n    return(\r\n        <div className = {classes.root}>\r\n            <Card className={classes.card}>\r\n                        <CardContent>\r\n                            <br></br>\r\n                            <Grid>\r\n                                {isLike == true ? \r\n                                <ThumbUpIcon color=\"primary\"/> \r\n                                :\r\n                                <ThumbDownIcon color=\"secondary\"/>    \r\n                            }\r\n                            \r\n                                <Typography  className={classes.title}>{nk}</Typography>\r\n                                <Typography>{sk}</Typography>  \r\n                                    \r\n                            </Grid>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                        </CardActions>\r\n                    </Card>                  \r\n        </div>\r\n    )\r\n}","import React, { useEffect, useRef, useState, useContext,observer } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Tab, Typography } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { FixedSizeList } from 'react-window';\r\nimport MemberStore from '../stores/MemberStore';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Profile from './ProfileCard';\r\nimport RankingCard from './RankingCard';\r\nimport EvaluatedView from './EvaluatedView';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '99%',\r\n        height: '100%',\r\n        display: 'inline-block',\r\n    },\r\n    title: {\r\n\r\n        fontWeight: 600,\r\n    },\r\n    content: { \r\n        width: '99%',\r\n    },\r\n    card : {\r\n        marginLeft:'15%',\r\n        marginTop: '5%',\r\n        width : '70%',\r\n    },\r\n    contentGrid:{\r\n        marginLeft: '10%',\r\n    },\r\n    rankingContentGrid:{\r\n        marginTop : '5%',\r\n        marginLeft: '10%',\r\n    },\r\n    admin : {\r\n        marginLeft: '4%'\r\n    },\r\n    editButton : {\r\n        marginLeft: '82%'\r\n    },\r\n    percent : {\r\n        color: '#51c268'\r\n    },\r\n    degree : {\r\n\r\n    },\r\n    grid : {\r\n        width : '100%'\r\n    },\r\n    left : {\r\n        paddingTop : '5%',\r\n        width : '50%'\r\n    },\r\n    right : {\r\n        width: '50%'\r\n    },\r\n    rankingCard : {\r\n        width : '50%',\r\n        height : '100%'\r\n    },\r\n    list : {\r\n        height : '70%'\r\n    },\r\n    evalCard : {\r\n        paddingBottom : '5%',\r\n    }\r\n})\r\n\r\n\r\nexport default function TranslationView(props) {\r\n\r\n    const classes = useStyles();\r\n    const hasCookie = props.hasCookie;\r\n    let history = useHistory();\r\n\r\n    const memberStore = useContext(MemberStore.context);\r\n    const [name, setName] = useState(\"\");\r\n    const [isAdmin, setIsAdmin] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [percent, setPercent] = useState(0);\r\n    const [ranking, setRanking] = useState(0);\r\n    const [evaluated, setEvaluated] = useState([]);\r\n    const [id, setId] = useState(\"\");\r\n    const [apiKey, setKey] = useState(\"\");\r\n    const [evalCount , setCount] = useState(0);\r\n    \r\n    useEffect(() => {\r\n        memberStore.getUserInfo().then((res) => {\r\n            setId(res.data.data.id);\r\n            setName(res.data.data.nickname);\r\n            setIsAdmin(res.data.data.isAdmin);\r\n            setEmail(res.data.data.email);\r\n            setEvaluated(res.data.data.evalInfo);\r\n            setCount(res.data.data.evaluationCount);\r\n        });\r\n        \r\n        \r\n        memberStore.getMyRank().then((res) => {\r\n            setPercent(res.data.rank_rate);\r\n            setRanking(res.data.rank);\r\n        });\r\n        \r\n        \r\n        memberStore.getApiKey().then((res) => {\r\n            setKey(res.data.apiKey);\r\n        });\r\n         \r\n    }, [])\r\n\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <Grid className={classes.grid} container direction=\"row\" justify=\"space-around\">\r\n                    <div className={classes.left}>\r\n                        <Profile name={name} isAdmin={isAdmin} email={email} id={id} apiKey={apiKey} />\r\n                        <RankingCard percent={percent} ranking= {ranking} />\r\n                    </div>  \r\n                    <div className={classes.right}>\r\n                            <Card className={classes.evalCard}>\r\n                                <CardContent>\r\n                                    <Typography className={classes.title} variant=\"h4\">\r\n                                        평가기록\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                    {\r\n                                        evalCount < 1 ? \r\n                                        (\r\n                                            <Grid item align=\"center\">\r\n                                                <br/>\r\n                                                <Typography  className={classes.title} variant=\"h5\"> 최근 번역 평가 기록이 없습니다.</Typography>\r\n                                            </Grid> \r\n                                        )                                     \r\n                                        :\r\n                                        (\r\n                                            evaluated.map((element) => {\r\n                                                return(\r\n                                                    <Grid item align=\"center\">\r\n                                                        <EvaluatedView element={element}/>\r\n                                                    </Grid>                            \r\n                                                )\r\n                                            }\r\n                                        )\r\n                                        )\r\n                                    \r\n                                    }\r\n                                    \r\n                            </Card>\r\n\r\n                    </div>                  \r\n                </Grid>\r\n                   \r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import axios from 'axios'\r\n\r\nexport default async function requestFileTranslate(_FILES) {\r\n    return await axios.post('/api/translator/file',\r\n        {\r\n            params: { files: _FILES },\r\n            withCredentials: true\r\n        }\r\n    ).then((res) => {\r\n        if (res.status === 200) {\r\n            if (Object.keys(res.data).length !== 0) {\r\n                return res;\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }).catch(error => { return error })\r\n}","import { makeAutoObservable, observable, computed, action, flow } from \"mobx\"\r\n\r\nimport requestFileTranslate from '../controllers/FileTranslationController'\r\nexport class FileTranslationStore {\r\n    originalFiles = [];\r\n    translatedFiles = [];\r\n    fileCount = 0;\r\n    selectedOriginal = [];\r\n    selectedTranslated = [];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this, {\r\n            originalFiles: observable,\r\n            translatedFiles: observable,\r\n            fileCount: observable,\r\n            selectedOriginal: observable,\r\n            selectedTranslated: observable,\r\n            uploadFile: action,\r\n            DeleteFiles: action,\r\n            setSelected: action,\r\n            setSelectAll: action,\r\n            translateFiles: action,\r\n            requestFileTranslate: action,\r\n            downloadFiles: action,\r\n        });\r\n    }\r\n\r\n    findIndex(file) {\r\n        const fileName = file.name;\r\n        return this.originalFiles.findIndex(e => e.name === fileName);\r\n    }\r\n\r\n    uploadFile(fileList) {\r\n        for (const file of fileList) {\r\n            const reader = new FileReader();\r\n            reader.readAsText(file);\r\n\r\n            reader.onload = (e) => {\r\n                const content = e.target.result;\r\n\r\n                let fileInfo = {\r\n                    name: file.name,\r\n                    size: file.size,\r\n                    content: content,\r\n                }\r\n\r\n                const index = this.findIndex(file);\r\n\r\n                if (index === -1) {\r\n                    this.originalFiles.push(fileInfo);\r\n                    this.fileCount++;\r\n                } else {\r\n                    this.originalFiles[index] = fileInfo;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    DeleteFiles() {\r\n        for (const name of this.selectedOriginal) {\r\n            this.originalFiles = this.originalFiles.filter((file) => file.name !== name);\r\n        }\r\n        this.fileCount = this.originalFiles.length;\r\n        this.selectedOriginal = [];\r\n    }\r\n\r\n    setSelected(caller, name) {\r\n        let newSelected = [];\r\n\r\n        if (caller === 'original') {\r\n            const selectedIndex = this.selectedOriginal.indexOf(name);\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(this.selectedOriginal, name);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(this.selectedOriginal.slice(1));\r\n            } else if (selectedIndex === this.selectedOriginal.length - 1) {\r\n                newSelected = newSelected.concat(this.selectedOriginal.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    this.selectedOriginal.slice(0, selectedIndex),\r\n                    this.selectedOriginal.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            this.selectedOriginal = [...newSelected]\r\n        } else if (caller === 'translated') {\r\n            const selectedIndex = this.selectedTranslated.indexOf(name);\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(this.selectedTranslated, name);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(this.selectedTranslated.slice(1));\r\n            } else if (selectedIndex === this.selectedTranslated.length - 1) {\r\n                newSelected = newSelected.concat(this.selectedTranslated.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    this.selectedTranslated.slice(0, selectedIndex),\r\n                    this.selectedTranslated.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            this.selectedTranslated = [...newSelected]\r\n        }\r\n    }\r\n\r\n    setSelectAll(caller, event) {\r\n        const newSelected = [];\r\n\r\n        if (caller === 'original') {\r\n            if (event.target.checked) {\r\n                this.originalFiles.forEach((file) => {\r\n                    newSelected.push(file.name)\r\n                })\r\n            }\r\n            this.selectedOriginal = [...newSelected]\r\n        } else if (caller === 'translated') {\r\n            if (event.target.checked) {\r\n                this.translatedFiles.forEach((file) => {\r\n                    newSelected.push(file.name)\r\n                })\r\n            }\r\n            this.selectedTranslated = [...newSelected]\r\n        }\r\n    }\r\n\r\n    async requestFileTranslate() {\r\n        const res = await requestFileTranslate(this.originalFiles);\r\n        if (res === null) {\r\n            return null;\r\n        } else {\r\n            const translatedFileArr = res.data.result;\r\n            if (Array.isArray(translatedFileArr)) {\r\n                const tmpArr = [];\r\n\r\n                for (const translatedFileInfo of translatedFileArr) {\r\n                    let file = new File([translatedFileInfo.content], translatedFileInfo.name, { type: 'text/plain' });\r\n                    let fileInfo = {\r\n                        name: translatedFileInfo.name,\r\n                        size: file.size,\r\n                        content: translatedFileInfo.content,\r\n                    };\r\n                    tmpArr.push(fileInfo);\r\n                }\r\n                this.translatedFiles = tmpArr;\r\n            }\r\n            return res;\r\n        }\r\n    }\r\n\r\n    downloadFiles() {\r\n        for (const name of this.selectedTranslated) {\r\n            const fileInfo = this.translatedFiles.find((value) => value.name === name)\r\n\r\n            let file = new File([fileInfo.content], fileInfo.name, { type: 'text/plain' })\r\n            const objURL = window.URL.createObjectURL(file);\r\n\r\n            // 이전에 생성된 메모리 해제\r\n            if (window.__Xr_objURL_forCreatingFile__) {\r\n                window.URL.revokeObjectURL(window.__Xr_objURL_forCreatingFile__);\r\n            }\r\n            window.__Xr_objURL_forCreatingFile__ = objURL;\r\n\r\n            var a = document.createElement('a');\r\n            a.download = fileInfo.name;\r\n            a.href = objURL;\r\n            a.click();\r\n        }\r\n    }\r\n};\r\n","import axios from 'axios'\r\n\r\nexport default async function requestApiKey(_NAME, _PURPOSE) {\r\n    return await axios.post('/api/bukpagoAPI/',\r\n        {\r\n            params: { name: _NAME, purpose: _PURPOSE },\r\n            withCredentials: true\r\n        }\r\n    ).catch(err => { return err }).then(res => {\r\n        console.log(res);\r\n        return res;\r\n    })\r\n}","import { makeAutoObservable, observable, computed, action, flow } from \"mobx\"\r\nimport requestApiKey from '../controllers/TranslationApiController'\r\n\r\nexport class TranslationApiStore {\r\n\r\n    constructor() {\r\n        makeAutoObservable(this, {\r\n            requestApiKey: action,\r\n        })\r\n    }\r\n\r\n    requestApiKey(name, purpose) {\r\n    console.log(\"스토어\")\r\n        requestApiKey(name, purpose).then((res) => {\r\n            console.log(\"스토어\")\r\n            return res;\r\n        })\r\n    }\r\n}","import { FileTranslationStore } from './FileTranslationStore';\r\nimport { TranslationApiStore } from './TranslationApiStore';\r\n\r\nexport class RootStore {\r\n    FileTranslationStore;\r\n    TranslationApiStore;\r\n\r\n    constructor() {\r\n        this.FileTranslationStore = new FileTranslationStore();\r\n        this.TranslationApiStore = new TranslationApiStore();\r\n    }\r\n}","import * as React from 'react'\r\nimport { RootStore } from './RootStore'\r\n\r\nexport const StoreContext = React.createContext(new RootStore());\r\nexport const StoreProvider = StoreContext.Provider;\r\n\r\nexport const useStores = () => React.useContext(StoreContext);","import { useState } from 'react';\r\nimport { observer } from 'mobx-react'\r\nimport { Button, Checkbox, lighten, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Toolbar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\nimport { useStores } from '../stores/Context';\r\nimport clsx from 'clsx';\r\n\r\nconst useCustomTableStyles = makeStyles({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        maxHeight: '375px'\r\n    },\r\n    toolbarRoot: {\r\n        paddingTop: '1%'\r\n    },\r\n    toolbarTitle: {\r\n        flex: \"1 1\",\r\n    },\r\n    button: {\r\n        color: 'white',\r\n        fontSize: \"1rem\",\r\n    },\r\n    uploadButton: {\r\n        backgroundColor: '#228b22',\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    highlight: {\r\n        color: '#f50057',\r\n        backgroundColor: lighten('#ff4081', 0.85),\r\n    },\r\n    headerRoot: {\r\n        width: '100%'\r\n    },\r\n    idCell: {\r\n        width: '5%'\r\n    },\r\n    nameCell: {\r\n        width: '75%'\r\n    },\r\n    sizeCell: {\r\n        width: '20%'\r\n    },\r\n})\r\n\r\nexport default observer(function CustomUploadTable(props) {\r\n    const classes = useCustomTableStyles();\r\n    const { FileTranslationStore } = useStores();\r\n\r\n    const returnFileSize = (size) => {\r\n        if (size === 0) {\r\n            return 'n/a'\r\n        }\r\n\r\n        var sizes = ['바이트', '킬로바이트', '메가바이트', '기가바이트', '테라바이트', '페타바이트'];\r\n        var e = Math.floor(Math.log(size) / Math.log(1024));\r\n        return (size / Math.pow(1024, e)).toFixed(2) + \" \" + sizes[e];\r\n    }\r\n\r\n    const handleUploadFile = (event) => {\r\n        if (event.target.click) {\r\n            const files = event.target.files;\r\n            FileTranslationStore.uploadFile(files)\r\n        }\r\n    }\r\n\r\n    const handleDeleteFile = (event) => {\r\n        event.preventDefault();\r\n        FileTranslationStore.DeleteFiles();\r\n    }\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        event.preventDefault();\r\n        FileTranslationStore.setSelectAll('original', event);\r\n    }\r\n\r\n    const handleClick = (event, name) => {\r\n        event.preventDefault();\r\n        FileTranslationStore.setSelected('original', name);\r\n    }\r\n\r\n    const isSelected = (name) => {\r\n        return FileTranslationStore.selectedOriginal.indexOf(name) !== -1;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Toolbar className={clsx(classes.toolbarRoot, { [classes.highlight]: FileTranslationStore.selectedOriginal.length > 0 })}>\r\n                <Typography className={classes.toolbarTitle} variant=\"h6\" component=\"div\">\r\n                    원본파일\r\n                </Typography>\r\n                {FileTranslationStore.selectedOriginal.length > 0 ? (\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                        color=\"secondary\"\r\n                        endIcon={<DeleteIcon />}\r\n                        onClick={handleDeleteFile}\r\n                    >\r\n                        삭제\r\n                    </Button>\r\n                ) : (\r\n                    <Button\r\n                        className={clsx(classes.button, classes.uploadButton)}\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                        aria-labelledby=\"upload\"\r\n                        endIcon={<PublishIcon />}\r\n                    >\r\n                        업로드\r\n                        <input\r\n                            id='upload'\r\n                            className={classes.input}\r\n                            multiple\r\n                            type=\"file\"\r\n                            accept=\".txt\"\r\n                            onChange={handleUploadFile}\r\n                        />\r\n                    </Button>\r\n                )\r\n                }\r\n            </Toolbar>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader className={classes.table}>\r\n                    <TableHead className={classes.headerRoot}>\r\n                        <TableRow>\r\n                            <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                    indeterminate={FileTranslationStore.selectedOriginal.length > 0 && FileTranslationStore.selectedOriginal.length < FileTranslationStore.fileCount}\r\n                                    checked={FileTranslationStore.fileCount > 0 && FileTranslationStore.selectedOriginal.length === FileTranslationStore.fileCount}\r\n                                    onChange={handleSelectAllClick}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className={classes.idCell} key='id' align='center'>ID</TableCell>\r\n                            <TableCell className={classes.nameCell} key='fileName' align='left'>파일 이름</TableCell>\r\n                            <TableCell className={classes.sizeCell} key='filSize' align='left'>파일 크기</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {FileTranslationStore.originalFiles.map((fileInfo, index) => {\r\n                            const isItemSelected = isSelected(fileInfo.name);\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    onClick={(event) => handleClick(event, fileInfo.name)}\r\n                                    role=\"checkbox\"\r\n                                    key={fileInfo.name}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox checked={isItemSelected} />\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.idCell}>{index + 1}</TableCell>\r\n                                    <TableCell className={classes.nameCell}>{fileInfo.name}</TableCell>\r\n                                    <TableCell className={classes.sizeCell}>{returnFileSize(fileInfo.size)}</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n});","import { observer } from 'mobx-react'\r\nimport { Button, Checkbox, lighten, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Toolbar, Typography } from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nimport { useStores } from '../stores/Context';\r\nimport clsx from 'clsx';\r\n\r\nconst useCustomTableStyles = makeStyles({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    container: {\r\n        maxHeight: '375px'\r\n    },\r\n    toolbarRoot: {\r\n        paddingTop: '1%'\r\n    },\r\n    toolbarTitle: {\r\n        flex: \"1 1\",\r\n    },\r\n    button: {\r\n        color: 'white',\r\n        fontSize: \"1rem\",\r\n    },\r\n    downloadButton: {\r\n        backgroundColor: '#F07069',\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n    },\r\n    highlight: {\r\n        color: '#58a0d1',\r\n        backgroundColor: lighten('#79b3da', 0.85),\r\n    },\r\n    headerRoot: {\r\n        width: '100%'\r\n    },\r\n    idCell: {\r\n        width: '5%'\r\n    },\r\n    nameCell: {\r\n        width: '75%'\r\n    },\r\n    sizeCell: {\r\n        width: '20%'\r\n    },\r\n})\r\n\r\nexport default observer(function CustomDownloadTable(props) {\r\n    const classes = useCustomTableStyles();\r\n    const { FileTranslationStore } = useStores();\r\n\r\n    const returnFileSize = (size) => {\r\n        if (size === 0) {\r\n            return 'n/a'\r\n        }\r\n\r\n        var sizes = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB'];\r\n        var e = Math.floor(Math.log(size) / Math.log(1024));\r\n        return (size / Math.pow(1024, e)).toFixed(2) + \" \" + sizes[e];\r\n    }\r\n\r\n    const downloadFile = (event) => {\r\n        event.preventDefault();\r\n        FileTranslationStore.downloadFiles();\r\n    }\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        event.preventDefault();\r\n        FileTranslationStore.setSelectAll('translated', event);\r\n    }\r\n\r\n    const handleClick = (event, name) => {\r\n        event.preventDefault();\r\n        FileTranslationStore.setSelected('translated', name);\r\n    }\r\n\r\n    const isSelected = (name) => {\r\n        return FileTranslationStore.selectedTranslated.indexOf(name) !== -1;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Toolbar className={clsx(classes.toolbarRoot)}>\r\n                <Typography className={classes.toolbarTitle} variant=\"h6\" component=\"div\">\r\n                    번역파일\r\n                </Typography>\r\n                {FileTranslationStore.selectedTranslated.length > 0 &&\r\n                    <Button\r\n                        className={clsx(classes.button, classes.downloadButton)}\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                        endIcon={<GetAppIcon />}\r\n                        onClick={downloadFile}\r\n                    >\r\n                        다운로드\r\n                    </Button>\r\n                }\r\n            </Toolbar>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader className={classes.table}>\r\n                    <TableHead className={classes.headerRoot}>\r\n                        <TableRow>\r\n                            <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                    indeterminate={FileTranslationStore.selectedTranslated.length > 0 && FileTranslationStore.selectedTranslated.length < FileTranslationStore.fileCount}\r\n                                    checked={FileTranslationStore.fileCount > 0 && FileTranslationStore.selectedTranslated.length === FileTranslationStore.fileCount}\r\n                                    onChange={handleSelectAllClick}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell className={classes.idCell} key='id' align='center'>ID</TableCell>\r\n                            <TableCell className={classes.nameCell} key='fileName' align='left'>파일 이름</TableCell>\r\n                            <TableCell className={classes.sizeCell} key='filSize' align='left'>파일 크기</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {FileTranslationStore.translatedFiles.map((fileInfo, index) => {\r\n                            const isItemSelected = isSelected(fileInfo.name);\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    onClick={(event) => handleClick(event, fileInfo.name)}\r\n                                    role=\"checkbox\"\r\n                                    key={fileInfo.name}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox checked={isItemSelected} />\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.idCell}>{index + 1}</TableCell>\r\n                                    <TableCell className={classes.nameCell}>{fileInfo.name}</TableCell>\r\n                                    <TableCell className={classes.sizeCell}>{returnFileSize(fileInfo.size)}</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n})","import clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Box, Button, Grid, Paper, Typography } from '@material-ui/core';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport CustomUploadTable from './CustomUploadTable';\r\nimport CustomDownloadTable from './CustomDownloadTable';\r\nimport { useSnackbar } from 'material-ui-snackbar-provider'\r\nimport { observer } from 'mobx-react';\r\nimport { useStores } from '../stores/Context'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useBodyStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'inline-block',\r\n    },\r\n    title: {\r\n        paddingTop: \"2%\",\r\n        textAlign: 'center',\r\n        fontWeight: 600,\r\n    },\r\n    content: {\r\n        paddingTop: '5%',\r\n        width: '100%',\r\n        height: 'auto',\r\n    },\r\n    leftBox: {\r\n        width: '42.5%',\r\n    },\r\n    rightBox: {\r\n        width: '42.5%',\r\n    },\r\n    middleBox: {\r\n        width: '8%',\r\n        paddingTop: '1%',\r\n    },\r\n    columFlexBox: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n    },\r\n    alignCenter: {\r\n        justifyContent: 'center',\r\n    },\r\n    translateBtn: {\r\n        fontSize: '1rem',\r\n    },\r\n});\r\n\r\nexport default observer(function FileTranslationView(props) {\r\n    const classes = useBodyStyles();\r\n    const snackbar = useSnackbar();\r\n    let history = useHistory();\r\n    const hasCookie = props.hasCookie;\r\n    const { FileTranslationStore } = useStores();\r\n\r\n    const handleTranslate = () => {\r\n        console.log(hasCookie);\r\n        if (!hasCookie) {\r\n            snackbar.showMessage(\r\n                '파일번역 기능은 로그인이 필요합니다.',\r\n                '확인', () => history.push('/buk-pago/signIn')\r\n            )\r\n        } else if (FileTranslationStore.fileCount === 0) {\r\n            snackbar.showMessage(\r\n                '번역할 파일이 존재 하지 않습니다'\r\n            )\r\n        } else {\r\n            FileTranslationStore.requestFileTranslate().then((res) => {\r\n                if (res === null) {\r\n                    snackbar.showMessage(\r\n                        '파일 번역 실패, 재시도 바랍니다.', '확인'\r\n                    )\r\n                } else {\r\n                    try {\r\n                        snackbar.showMessage(\r\n                            res.data.message, '확인'\r\n                        )\r\n                    } catch {\r\n                        snackbar.showMessage(\r\n                            '파일 번역 완료', '확인'\r\n                        )\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>\r\n                <Typography variant=\"h3\" className={classes.title}>\r\n                    파일번역\r\n                </Typography>\r\n            </div>\r\n            <br />\r\n            <div className={classes.content}>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\r\n                    <Box component={Paper} className={clsx(classes.columFlexBox, classes.leftBox)}>\r\n                        <CustomUploadTable />\r\n                    </Box>\r\n\r\n                    <Box\r\n                        className={clsx(classes.columFlexBox, classes.alignCenter, classes.middleBox)}\r\n                    >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className={classes.translateBtn}\r\n                            color=\"primary\"\r\n                            endIcon={<ArrowForwardIcon />}\r\n                            onClick={handleTranslate}\r\n                        >\r\n                            번역\r\n                        </Button>\r\n                    </Box>\r\n                    <Box component={Paper} className={clsx(classes.columFlexBox, classes.rightBox)} >\r\n                        <CustomDownloadTable />\r\n                    </Box>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Box, Button, Container, FormControl, Grid, InputLabel, makeStyles, MenuItem, Paper, Select, TextField, Typography } from \"@material-ui/core\";\r\nimport { useSnackbar } from 'material-ui-snackbar-provider'\r\nimport clsx from \"clsx\";\r\nimport { useStores } from '../stores/Context'\r\nimport TranslationStore from \"../stores/TranslationStore\";\r\n\r\nconst useGetApiKeyStyles = makeStyles((theme) => ({\r\n    boldText: {\r\n        fontWeight: '600'\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n        paddingTop: '2%',\r\n    },\r\n    content: {\r\n        paddingTop: '5%'\r\n    },\r\n    leftBox: {\r\n        width: '40%',\r\n    },\r\n    rightBox: {\r\n        width: '40%'\r\n    },\r\n    usageTitle: {\r\n        paddingLeft: '2%'\r\n    },\r\n    usageContent: {\r\n        paddingTop: '2%'\r\n    },\r\n    usageText: {\r\n        paddingTop: '1%',\r\n        fontSize: '1.2rem'\r\n    },\r\n    apiExampleBox: {\r\n        paddingTop: '3%',\r\n        width: '600px',\r\n        height: '100%',\r\n    },\r\n    apiExampleContent: {\r\n        backgroundColor: '#221E40',\r\n        display: 'flex-inline',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        padding: '1% 0'\r\n    },\r\n    apiExampleText: {\r\n        fontSize: '1.2rem',\r\n        paddingLeft: '4%'\r\n    },\r\n    apiHead: {\r\n        color: '#2EC970'\r\n    },\r\n    apiForm: {\r\n        color: '#E5BA12'\r\n    },\r\n    apiProtocol: {\r\n        color: '#FFFFFF'\r\n    },\r\n    registrationTitle: {\r\n        paddingBottom: '1%'\r\n    },\r\n    registrationBox: {\r\n        paddingBottom: '10%'\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    registrationBtn: {\r\n        height: '60px'\r\n    }\r\n}));\r\n\r\nexport default observer(function TranslateApiView(props) {\r\n    const classes = useGetApiKeyStyles();\r\n    const [purpose, setPurpose] = useState('');\r\n    const applicant = useRef('');\r\n    const snackbar = useSnackbar();\r\n    let history = useHistory();\r\n    const hasCookie = props.hasCookie;\r\n    const translationStore = React.useContext(TranslationStore.context);\r\n    \r\n    const handleChange = (event) => {\r\n        setPurpose(event.target.value);\r\n    }\r\n\r\n    const getApiKey = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!hasCookie) {\r\n            snackbar.showMessage(\r\n                '번역 API 키 발급은 로그인이 필요합니다.',\r\n                '이동', () => history.push('/buk-pago/signIn')\r\n            )\r\n        } else {\r\n            translationStore.getApiKey(applicant.current.value, purpose).then((res) => {\r\n                if (res.status === 200) {\r\n                        snackbar.showMessage(\r\n                            '번역 API 키 발급 완료. 발급된 키는 마이페이지에서 확인',\r\n                            '확인', () => history.push('/buk-pago/myPage')\r\n                        )\r\n                }\r\n                else {\r\n                        snackbar.showMessage(\r\n                            '번역 API 키 발급 반려됨.', '확인'\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>\r\n                <Typography className={clsx(classes.title, classes.boldText)} variant='h3'>\r\n                    北파고 API 키 발급\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.content}>\r\n                <Grid container direction='row' justify='center' alignItems=\"flex-start\">\r\n                    <Box className={classes.leftBox}>\r\n                        <Grid container direction='column' justify='center' alignItems='flex-start'>\r\n                            <Box>\r\n                                <Typography variant='h4' className={clsx(classes.usageTitle, classes.boldText)}>\r\n                                    사용방법\r\n                                </Typography>\r\n                                <div className={classes.usageContent}>\r\n                                    <p className={classes.usageText}>\r\n                                        1. 북파고 페이지를 통해 API Key를 신청한다.\r\n                                    </p>\r\n                                    <p className={classes.usageText}>\r\n                                        2. 발급받은 키를 아래와 같이 코드를 작성해 활용한다.\r\n                                    </p>\r\n                                </div>\r\n                            </Box>\r\n                            <Box className={classes.apiExampleBox}>\r\n                                <div className={classes.apiExampleContent}>\r\n                                    <p className={classes.apiExampleText}>\r\n                                        <span className={classes.apiHead}>GET</span>\r\n                                        <span className={classes.apiForm}> /bukPago/translation/traslate </span>\r\n                                        <span className={classes.apiProtocol}>HTTP/1.1</span>\r\n                                    </p>\r\n                                    <p className={classes.apiExampleText}>\r\n                                        <span className={classes.apiHead}>Host</span>\r\n                                        <span className={classes.apiProtocol}> : dapi.bukpago.com</span>\r\n                                    </p>\r\n                                    <p className={classes.apiExampleText}>\r\n                                        <span className={classes.apiHead}>Authorization</span>\r\n                                        <span className={classes.apiProtocol}> : BukPagoAK \t&#123;REST_API_KEY&#125;</span>\r\n                                    </p>\r\n                                </div>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Box className={classes.rightBox}>\r\n                        <Container maxWidth=\"sm\">\r\n                            <form noValidate>\r\n                                <div className={classes.registrationBox}>\r\n                                    <Typography variant='h4' className={clsx(classes.registrationTitle, classes.boldText)}>API 요청자 이름</Typography>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        margin='normal'\r\n                                        fullWidth\r\n                                        required\r\n                                        label=\"이름\"\r\n                                        inputRef={applicant}\r\n                                        className={classes.textField}\r\n                                    />\r\n                                </div>\r\n                                <div className={classes.registrationBox}>\r\n                                    <Typography variant='h4' className={clsx(classes.registrationTitle, classes.boldText)}>활용 목적</Typography>\r\n                                    <FormControl required variant=\"outlined\" fullWidth className={classes.formControl}>\r\n                                        <InputLabel id=\"purpose\">활용목적</InputLabel>\r\n                                        <Select\r\n                                            id='purpose'\r\n                                            value={purpose}\r\n                                            variant='outlined'\r\n                                            label=\"활용목적\"\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            <MenuItem value={'hobby'}>취미</MenuItem>\r\n                                            <MenuItem value={'research'}>연구</MenuItem>\r\n                                            <MenuItem value={'homework'}>과제</MenuItem>\r\n                                            <MenuItem value={'etc'}>기타</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.registrationBtn}\r\n                                    onClick={getApiKey}\r\n                                >\r\n                                    신청하기\r\n                                </Button>\r\n                            </form>\r\n                        </Container>\r\n                    </Box>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import './App.css';\r\nimport React, { useContext, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\nimport HomeLayout from './HomeLayout';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useCookies, CookiesProvider } from 'react-cookie';\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport { SnackbarProvider } from 'material-ui-snackbar-provider'\r\n\r\nimport TranslationView from './components/TranslationView';\r\nimport SignUpView from './components/SignUpView';\r\nimport SignInView from './components/SignInView';\r\nimport DictionaryView from './components/DictionaryView';\r\nimport TrainView from './components/TrainView';\r\nimport MyPageView from './components/MyPageView';\r\n\r\nimport FileTranslationView from './components/FileTranslationView';\r\nimport TranslationApiView from './components/TranslationApiView'\r\nimport { isConstructorDeclaration } from 'typescript';\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    '@global': {\r\n        'body, html': {\r\n            padding: 0,\r\n            margin: 0,\r\n            minHeight: '100%',\r\n            backgroundColor: '#f7fafa',\r\n        },\r\n    },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#58a0d1',\r\n            dark: '#3d7092',\r\n            light: '#79b3da',\r\n            contrastText: '#fff',\r\n        },\r\n    },\r\n    overrides: {\r\n        MuiButton: {\r\n            root: {\r\n                color: 'white',\r\n            },\r\n        },\r\n    },\r\n});\r\n\r\nconst App = observer((props) => {\r\n    const classes = useStyle();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['loginAuth']);\r\n    const [hasCookie, setHasCookie] = useState(false);\r\n\r\n    console.log(hasCookie);\r\n    console.log(cookies['loginAuth']);\r\n    console.log(cookies);\r\n\r\n    React.useEffect(() => {\r\n        if (cookies['loginAuth'] != undefined) setHasCookie(true);\r\n    });\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MuiThemeProvider theme={theme}>\r\n                <SnackbarProvider SnackbarProps={{ autoHideDuration: 4000, anchorOrigin: { vertical: 'bottom', horizontal: 'left' } }}>\r\n                    <Router>\r\n                        <HomeLayout\r\n                            cookies={cookies}\r\n                            hasCookie={hasCookie}\r\n                            setHasCookie={setHasCookie}\r\n                            removeCookie={removeCookie}\r\n                            setCookie={setCookie}\r\n                        >\r\n                            <Switch>\r\n                                <Route path=\"/buk-pago/signUp\" component={SignUpView} />\r\n                                <Route path=\"/buk-pago/signIn\">\r\n                                    <SignInView setHasCookie={setHasCookie}> </SignInView>\r\n                                </Route>\r\n                                <Route exact path=\"/buk-pago\" component={TranslationView} />\r\n                                <Route exact path=\"/buk-pago/dictionary\" component={DictionaryView} />\r\n                                <Route exact path=\"/buk-pago/train\">\r\n                                    <TrainView hasCookie={hasCookie} />\r\n                                </Route>\r\n                                <Route exact path=\"/buk-pago/file-translate\">\r\n                                    <FileTranslationView hasCookie={hasCookie} />\r\n                                </Route>\r\n                                <Route exact path='/buk-pago/api'>\r\n                                    <TranslationApiView hasCookie={hasCookie} />\r\n                                </Route>\r\n                                <Route exact path=\"/buk-pago/myPage\">\r\n                                    <MyPageView hasCookie={hasCookie}></MyPageView>\r\n                                </Route>\r\n                            </Switch>\r\n                        </HomeLayout>\r\n                    </Router>\r\n                </SnackbarProvider>\r\n            </MuiThemeProvider>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { StoreProvider } from './stores/Context';\r\nimport { RootStore } from './stores/RootStore'\r\n\r\nconst rootStore = new RootStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StoreProvider value={rootStore}>\r\n      <App />\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}