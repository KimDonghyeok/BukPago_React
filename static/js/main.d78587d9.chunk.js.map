{"version":3,"sources":["HomeLayout.js","controllers/LoginController.js","stores/LoginStore.js","components/LogInView.js","controllers/PostController.js","stores/PostStore.js","components/FreeboardView.js","controllers/TranslationController.js","stores/TranslationStore.js","components/TranslationView.js","components/WriteView.js","components/SignInView.js","models/Dictionary.js","controllers/DictionaryController.js","stores/DictionaryStore.js","components/DictionaryView.js","components/TrainView.js","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","theme","root","width","height","appBar","backgroundColor","grid","paddingLeft","title","fontSize","fontWeight","contentArea","paddingTop","minHeight","minWidth","position","link","textDecoration","HomeLayout","props","children","classes","className","AppBar","Toolbar","toolBar","alignItems","Grid","container","direction","justify","to","pathname","style","Button","color","size","requestLogin","email","pw","a","axios","post","password","catch","error","then","res","LoginStore","this","context","createContext","instance","observable","action","getInstance","useStyles","margin","content","boxSizing","padding","loginContent","display","justifyContent","flexDirection","loginId","marginTop","outline","loginPassword","login","autoLogin","lineHeight","loginBtn","cursor","marginBottom","borderRadius","borderStyle","LogInView","useState","userId","setUserId","userPassword","setUserPassword","loginStore","useContext","TextField","id","placeholder","onChange","e","target","value","for","type","onClick","result","alert","requestReadPost","get","post_title","post_content","err","console","warn","post_id","put","methon","url","data","status","PostStore","requestAddPost","requestUpdatePost","requestDeletePost","elem","document","compatMode","documentElement","body","clientHeight","clientWidth","getWidth","tableRate","rate","textAlign","search","table","marginLeft","marginRight","fab","float","options","key","align","createData","post_number","category","comment","writer","written_time","view","recommendation","Freeboard","log","page","setPage","rowsPerPage","setRowsPerPage","open","setOpen","data_lists","readPost","tmp","Typography","variant","tyep","onKeyPress","event","TableContainer","Table","TableHead","TableRow","map","option","TableCell","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage","parseInt","Fab","aria-label","Modal","onClose","requestTranslate","_northText","params","northText","withCredentials","TranslationStore","isLike","inputText","outputText","requestTranslike","paper","textField","button","box","textLength","right","bottom","clearButton","top","bukPaper","namPaper","upDownBtn","TranslationView","setInputText","inputTextLength","setInputTextLength","setOutputText","setContent","severity","setSeverity","translateState","setTranslateState","translationStore","React","handleClose","Paper","multiline","autoFocus","rows","str","Box","disableRipple","translate","IconButton","InputProps","readOnly","ButtonGroup","transLike","navigator","clipboard","writeText","Snackbar","autoHideDuration","Alert","title_text","border","borderBottom","content_text","resize","WriteView","titleText","setTitleText","contentText","setContentText","postStore","addPost","registerContent","registerId","registerPassword","register","autoRegister","registerBtn","SignInView","checkPassword","setUserCheckPassword","userNickname","makeUserNickname","Dictionary","north","south","mean","_query","query","Object","keys","index","push","get_dic","DictionaryStore","requestGetDictionary","dictionarys","paddingBottom","columns","field","headerName","DictionaryView","dictionaryStore","getDictionary","useEffect","pageSize","mainContent","card","pass","cardGrid","ranking","Card","CardContent","CardActions","spacing","item","createMuiTheme","palette","primary","main","dark","light","contrastText","secondary","App","observer","exact","path","FreeboardView","TrainView","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d78587d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#58a0d1',\r\n    },\r\n    grid: {\r\n        paddingLeft: '5%',\r\n        width: '50%',\r\n    },\r\n    title: {\r\n        fontSize: '18px',\r\n        fontWeight: 600,\r\n    },\r\n    contentArea : {\r\n        paddingTop : '5%',\r\n        width : '100%',\r\n        height : '100%',\r\n        minHeight : '80%',\r\n        minWidth : '100%',\r\n        position : 'sticky',\r\n    },\r\n    link : {\r\n        textDecoration: 'none'\r\n    }\r\n}))\r\n\r\n\r\nfunction HomeLayout(props) {\r\n    const { children } = props;\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar className={classes.toolBar} alignItems=\"flex-end\" position=\"fixed\">\r\n                    <Grid\r\n                        className={classes.grid}\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"space-between\"\r\n                        alignItems=\"flex-start\"\r\n                    >\r\n                        <Link\r\n                            to={{\r\n                                pathname: '/',\r\n                            }}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <Button className={classes.title} color=\"secondary\" size=\"large\">\r\n                                北파고\r\n                            </Button>\r\n                        </Link>\r\n                        <Button className={classes.title} color=\"secondary\" size=\"large\">\r\n                            파일번역\r\n                        </Button>\r\n                        <Link\r\n                            to={{\r\n                                pathname: '/dictionary',\r\n                            }}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <Button className={classes.title} color=\"secondary\" size=\"large\">\r\n                                북한말 사전\r\n                            </Button>\r\n                        </Link>\r\n                        \r\n                        <Link\r\n                            to={{\r\n                                pathname: '/free-board',\r\n                            }}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <Button className={classes.title} color=\"secondary\" size=\"large\">\r\n                                자유게시판\r\n                            </Button>\r\n                        </Link>\r\n                        <Link\r\n                            to={{\r\n                                pathname: '/train',\r\n                            }}\r\n                            style={{ textDecoration: 'none' }}\r\n                        >\r\n                            <Button className={classes.title} color=\"secondary\" size=\"large\">\r\n                                北파고 Train\r\n                            </Button>\r\n                        </Link>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.contentArea}>{children}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeLayout;\r\n","import axios from 'axios';\r\n\r\nexport default async function requestLogin(email, pw) {\r\n    return await axios\r\n        .post('api/login', { email: email, password: pw })\r\n        .catch((error) => {\r\n            return error;\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        });\r\n}\r\n","import { action, observable } from 'mobx';\r\nimport { createContext } from 'react';\r\nimport requestLogin from '../controllers/LoginController';\r\n\r\nclass LoginStore {\r\n    @observable logins = [];\r\n    static instance = null;\r\n    constructor() {\r\n        this.context = createContext(this);\r\n    }\r\n    static getInstance() {\r\n        if (!LoginStore.instance) this.instance = new LoginStore();\r\n        return LoginStore.instance;\r\n    }\r\n    @action\r\n    async login(email, pw) {\r\n        return requestLogin(email, pw);\r\n    }\r\n}\r\nexport default LoginStore = LoginStore.getInstance();\r\n","import React, { Component, useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport LoginStore from '../stores/LoginStore';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        width: '480px',\r\n        height: '620px',\r\n        margin: 'auto',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n    },\r\n    content: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        position: 'relative',\r\n        boxSizing: 'border-box',\r\n        margin: '80px auto',\r\n        padding: '20px',\r\n        //      background: '#fff',\r\n    },\r\n    loginContent: {\r\n        width: '100%',\r\n        margin: '0 auto',\r\n        position: 'relative',\r\n        padding: '0 20px 32px',\r\n        boxSizing: 'border-box',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    loginId: {\r\n        width: '100%',\r\n        height: '40px',\r\n        marginTop: '30px',\r\n        padding: '9px 12px',\r\n        outline: 'none',\r\n        boxSizing: 'border-box',\r\n    },\r\n    loginPassword: {\r\n        width: '100%',\r\n        height: '40px',\r\n        marginTop: '15px',\r\n        padding: '9px 12px',\r\n        outline: 'none',\r\n        boxSizing: 'border-box',\r\n    },\r\n    login: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    autoLogin: {\r\n        marginTop: '20px',\r\n        fontSize: '12px',\r\n        color: '#8d8d8d',\r\n        lineHeight: 3,\r\n    },\r\n    loginBtn: {\r\n        height: '40px',\r\n        fontSize: '14px',\r\n        padding: '13px 30px',\r\n        cursor: 'pointer',\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        lineHeight: '1px',\r\n        marginTop: '20px',\r\n        marginBottom: '12px',\r\n        borderRadius: '3px',\r\n        borderStyle: 'none',\r\n    },\r\n});\r\n\r\nexport default function LogInView(props) {\r\n    const [userId, setUserId] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n    const [open, setOpen] = useState(true);\r\n    const classes = useStyles();\r\n    const loginStore = useContext(LoginStore.context);\r\n    const handleChangeUserId = (e) => {\r\n        setUserId(e.target.value);\r\n    };\r\n    const handleChangeUserPassword = (e) => {\r\n        setUserPassword(e.target.value);\r\n    };\r\n    const handleLoginCheck = (e) => {\r\n        if (userId != '' && userPassword != '') {\r\n            loginStore.login(userId, userPassword).then((result) => {\r\n                alert('로그인 성공');\r\n            });\r\n        } else {\r\n            alert('로그인 실패');\r\n        }\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <div className={classes.loginContent}>\r\n                    <TextField\r\n                        className={classes.loginId}\r\n                        id=\"loginId\"\r\n                        placeholder=\"아이디\"\r\n                        onChange={handleChangeUserId}\r\n                        value={userId}\r\n                    ></TextField>\r\n                    <TextField\r\n                        className={classes.loginPassword}\r\n                        id=\"loginPassword\"\r\n                        placeholder=\"비밀번호\"\r\n                        onChange={handleChangeUserPassword}\r\n                        value={userPassword}\r\n                    ></TextField>\r\n                    <div className={classes.login}>\r\n                        <label className={classes.autoLogin} for=\"stay\">\r\n                            {''}\r\n                            <input type=\"checkbox\" id=\"stay\" />\r\n                            로그인 유지하기\r\n                        </label>\r\n                        <Link to=\"/sign-in\">\r\n                            <div className={classes.autoLogin}>회원가입</div>\r\n                        </Link>\r\n                    </div>\r\n                    <Button className={classes.loginBtn} onClick={handleLoginCheck}>\r\n                        {''}로그인{''}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n//페이징\r\nexport default async function requestReadPost() {\r\n    return await axios.get(\r\n        '/api/post').catch((error) => {return []}).then(res => {\r\n            return res;\r\n        });\r\n}\r\nexport async function readPost(post_id) {\r\n    return await axios.get(`/api/post/${post_id}/`).catch(err => {return [] }).then(res => {\r\n        if(res.data != null) {\r\n            var tmp = res.data\r\n            console.log(tmp)\r\n        }\r\n    })\r\n}\r\n//등록\r\nexport async function requestAddPost(post_title, post_content) {\r\n    return await axios.post(\r\n        '/api/post/', {\r\n            title: post_title,\r\n            content: post_content,\r\n        })\r\n        .catch((err) => {\r\n            console.warn(err);\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        });\r\n}\r\n//수정\r\nexport async function requestUpdatePost(post_id, post_title, post_content) {\r\n    return await axios.put('/api/post/', {\r\n        id : post_id,\r\n        title: post_title,\r\n        content: post_content\r\n    }).catch(err => {console.warn(err)}).then(res => {return res})\r\n}\r\n//삭제\r\nexport async function requestDeletePost(post_id) {\r\n    return await axios({methon:'Delete', url:'/api/post/', data:{id : post_id}}).catch(err => console.warn(err)).then(res => {return res.status})\r\n}","import { action, observable } from 'mobx';\r\nimport { createContext } from 'react';\r\nimport requestReadPost, {requestAddPost, requestDeletePost, requestUpdatePost,} from '../controllers/PostController';\r\n\r\nclass PostStore {\r\n    @observable posts = [];\r\n    static instance = null;\r\n    constructor() {\r\n        this.context = createContext(this);\r\n    }\r\n    static getInstance() {\r\n        if (!PostStore.instance) this.instance = new PostStore();\r\n        return PostStore.instance;\r\n    }\r\n    @action\r\n    readPost() {\r\n        return requestReadPost\r\n    }\r\n    @action\r\n    addPost(post_title, post_content) {\r\n        return requestAddPost(post_title, post_content).then(res => {\r\n            return res\r\n        });\r\n    }\r\n    @action\r\n    updatePost(post_id, post_title, post_content) {\r\n        return requestUpdatePost(post_id, post_title, post_content).then(res => {\r\n            return res\r\n        })\r\n    }\r\n    @action\r\n    deletePost(post_id) {\r\n        return requestDeletePost(post_id).then(res=> {\r\n            if(res == 200)\r\n                return true\r\n            else\r\n                return false\r\n        })\r\n    }\r\n}\r\nexport default PostStore = PostStore.getInstance();\r\n","import React, { useState, useContext, Component } from 'react';\r\nimport { Router, Route, Link } from 'react-router-dom';\r\nimport LogInView from './LogInView';\r\nimport { TablePagination, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport PostStore from '../stores/PostStore';\r\n\r\nvar elem = document.compatMode === 'CSS1Compat' ? document.documentElement : document.body;\r\n\r\nvar height = elem.clientHeight;\r\nvar width = elem.clientWidth;\r\n\r\nfunction getWidth(tableRate, rate) {\r\n    return width * tableRate * rate;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '99%',\r\n        height: '100%',\r\n        display: 'inline-block',\r\n    },\r\n    title: {\r\n        paddingTop: '2%',\r\n        textAlign: 'center',\r\n        fontWeight: 600,\r\n    },\r\n    search: {\r\n        //   paddingRight: '2%',\r\n        width: '15%',\r\n    },\r\n    table: {\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        height: height * 0.7,\r\n        width: '70%',\r\n    },\r\n    fab: {\r\n        marginRight: '15%',\r\n        float: 'right',\r\n    },\r\n});\r\n\r\nconst options = [\r\n    {\r\n        id: '번호',\r\n        key: 'post_number',\r\n        align: 'center',\r\n        width: getWidth(0.6, 1 / 15),\r\n    },\r\n    { id: '말머리', key: 'category', align: 'center', width: getWidth(0.6, 1 / 15) },\r\n    { id: '제목', key: 'title', align: 'center', width: getWidth(0.6, 8 / 10) },\r\n    {\r\n        id: '댓글수',\r\n        key: 'comment',\r\n        align: 'center',\r\n        width: getWidth(0.6, 1 / 15),\r\n    },\r\n    { id: '글쓴이', key: 'writer', align: 'center', width: getWidth(0.6, 1 / 15) },\r\n    { id: '작성일', key: 'written_time', align: 'center', width: getWidth(0.6, 1 / 15) },\r\n    {\r\n        id: '조회',\r\n        key: 'view',\r\n        align: 'center',\r\n        width: getWidth(0.6, 1 / 15),\r\n    },\r\n    {\r\n        id: '추천',\r\n        key: 'recommendation',\r\n        align: 'center',\r\n        width: getWidth(0.6, 1 / 15),\r\n    },\r\n];\r\nfunction createData(\r\n    post_number,\r\n    category,\r\n    title,\r\n    comment,\r\n    writer,\r\n    written_time,\r\n    view,\r\n    recommendation,\r\n) {\r\n    return { post_number, category, title, comment, writer, written_time, view, recommendation };\r\n}\r\n\r\nconst rows = [\r\n    createData(8, '질문', '번역관련 질문합니다', 1, '김박사', '21:00', 10, 0),\r\n    createData(7, '질문', '인식오류 관련 질문', 2, '김철수', '17:00', 10, 15),\r\n    createData(6, '정보', '번역율 올리는 3가지 방법', 10, '김정보', '15:35', 44, 10),\r\n    createData(5, '질문', '파일번역이 안되요', 1, '나바보', '12:35', 8, 2),\r\n    createData(4, '질문', '오늘 점심 추천받아요', 5, '점심밥', '10:22', 22, 15),\r\n    createData(3, '정보', '북한말 사전 이용방법', 4, '김사전', '09:50', 10, 5),\r\n    createData(2, '질문', '번역한거 복사하는 방법', 1, '나질문', '09:11', 4, 0),\r\n    createData(1, '공지', '이용안내', 15, '관리자', '08:33', 120, 20),\r\n    createData(9, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(10, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(11, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(12, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(13, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(14, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(15, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(16, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(17, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(18, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(19, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(20, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(21, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(22, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(23, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(24, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(25, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(26, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(27, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(28, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(29, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(30, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(31, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(32, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(33, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n    createData(34, 'image', 'World', 15, 're2', '21:00', 10, 15),\r\n];\r\n\r\n\r\nexport default function Freeboard(props) {\r\n/*\r\n    getListData = async = () => {\r\n        awit axios.get('free-board', {\r\n            data : [{\r\n                post_number : Post.post_id,\r\n                category : Post.post_id,\r\n                title, : Post.title,\r\n                comment : Post.number_replay,\r\n                writer : Post.post_editor,\r\n                written_time : Post.edit_time,\r\n                view : Post.view,\r\n                recommendation : Post.number_recommandations\r\n            }]\r\n        })\r\n    }\r\n*/\r\n    const search = () => {\r\n        console.log('검색 시작!');\r\n    };\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            search();\r\n        }\r\n    };\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(8);\r\n    const [open, setOpen] = useState(false);\r\n    const postStore = useContext(PostStore.context);\r\n    const handleChangePage = (e, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPage = (e) => {\r\n        setRowsPerPage(parseInt(+e.target.value));\r\n        setPage(0);\r\n    };\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const data_lists = postStore.readPost();\r\n    var tmp = [];\r\n    var datas = data_lists.tmp;\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>\r\n                <Typography className={classes.title} variant=\"h4\">\r\n                    자유게시판\r\n                </Typography>\r\n                <br />\r\n                <div>\r\n                    <TextField\r\n                        className={classes.search}\r\n                        id=\"standard-search\"\r\n                        tyep=\"search\"\r\n                        onKeyPress={handleKeyDown}\r\n                    />\r\n                    <SearchIcon onClick={search} />\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </div>\r\n            <div className={classes.content}>\r\n                <TableContainer className={classes.table}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {options.map((option) => {\r\n                                    return (    \r\n                                        <TableCell\r\n                                            key={option.key}\r\n                                            align={option.align}\r\n                                            style={{ width: option.width }}\r\n                                        >\r\n                                            {option.id}\r\n                                        </TableCell>\r\n                                    );\r\n                                })}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                    </Table>\r\n                </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10]}\r\n                        component=\"div\"\r\n                        count={data_lists.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPage}\r\n                        ></TablePagination>\r\n                <Link to=\"/write\">\r\n                    <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <Link to=\"/sign-in\">\r\n                    <Button>Hi!</Button>\r\n                </Link>\r\n                <Button onClick={handleOpen}>Open Modal</Button>\r\n                <Modal open={open} onClose={handleClose}>\r\n                    <LogInView />\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n/*\r\n                       <TableBody>\r\n                           {data_lists\r\n                               .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                               .map((data_list) => {\r\n                                   return (\r\n                                       <TableRow key={datas[data_list]['post_number']}>    \r\n                                           {datas.map((data) => {\r\n                                               const value = data[data_list];\r\n                                               return (\r\n                                                   <TableCell\r\n                                                   key={data}\r\n                                                   >\r\n                                                       {value}\r\n                                                   </TableCell>\r\n                                               );\r\n                                           })}\r\n                                       </TableRow>\r\n                                   );\r\n                               })}\r\n                       </TableBody>\r\n*/","import axios from 'axios'\r\n\r\nexport default async function requestTranslate(_northText) {\r\n    return await axios.get(\r\n        '/api/translator',{params : {northText : _northText}}, {withCredentials : true}\r\n    ).catch(error => {return error}).then(res => {\r\n        if(res.data != null){\r\n            return res.data.result\r\n        }\r\n    })\r\n}\r\n\r\nexport async function requestTranslike(_isLike, _inputText, _outputText) {\r\n    return await axios.post(\r\n        '/api/translator/evaluation', {params : {isLike : _isLike, inputText: _inputText, outputText : _outputText}}, {withCredentials : true}\r\n    ).catch(error => {return error}).then(res => {\r\n        return res.data\r\n    })\r\n}","import { observable, action } from 'mobx';\r\nimport { createContext } from 'react';\r\nimport requestTranslate from '../controllers/TranslationController';\r\nimport requestTranslike from '../controllers/TranslationController';\r\nclass TranslationStore {\r\n    @observable translates = [];\r\n    static instance = null;\r\n\r\n    constructor() {\r\n        this.context = createContext(this);\r\n    }\r\n    static getInstance() {\r\n        if (!TranslationStore.instance) this.instance = new TranslationStore();\r\n        return TranslationStore.instance;\r\n    }\r\n\r\n    @action\r\n    translate(northText) {\r\n        return requestTranslate(northText)\r\n    }\r\n\r\n    @action\r\n    translike(isLike, inputText, outputText){\r\n        \r\n        return requestTranslike(isLike, inputText, outputText).then(res => {\r\n            return res\r\n        })\r\n    }\r\n}\r\nexport default TranslationStore = TranslationStore.getInstance();\r\n","import React,  {  useState } from 'react'\r\nimport { Typography, } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport TranslationStore from '../stores/TranslationStore';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '99%',\r\n        height: '100%',\r\n        display: 'inline-block',\r\n    },\r\n    title: {\r\n        paddingTop: '2%',\r\n        textAlign: 'center',\r\n        fontWeight: 600,\r\n    },\r\n    content: {\r\n        paddingTop: '1%',\r\n    },\r\n    paper: {\r\n        marginTop: '1%',\r\n        width: '35%',\r\n        height: '50%',\r\n        position : 'relative'\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        float: 'right',\r\n    },\r\n    box: {\r\n        //display: 'flex',\r\n        //flex: 1,\r\n        //flexDirection: 'row-reverse',\r\n    },\r\n    textLength: {\r\n        position: 'absolute',\r\n        right: '2%',\r\n        bottom: '10%',\r\n    },\r\n    clearButton: {\r\n        position: 'absolute',\r\n        right: '0%',\r\n        top: '0%',\r\n    },\r\n    bukPaper : {\r\n        textAlign : \"center\",\r\n        width : '10%',\r\n        backgroundColor : '#ffd6d6'\r\n    },\r\n    namPaper: {\r\n        textAlign: 'center',\r\n        width: '10%',\r\n        backgroundColor: '#d6f8ff',\r\n    },\r\n    upDownBtn: {\r\n        float: 'left'\r\n    }\r\n});\r\n\r\nexport default function TranslationView(props) {\r\n    const classes = useStyles();\r\n    const [inputText, setInputText] = useState('');\r\n    const [inputTextLength, setInputTextLength] = useState(0);\r\n    const [outputText, setOutputText] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [content, setContent] = useState('');\r\n    const [severity, setSeverity] = useState('success');\r\n    const [translateState, setTranslateState] = useState(false)\r\n    const maxTextLength = 3000;\r\n    const translationStore = React.useContext(TranslationStore.context);\r\n    const onChange = (e) => {\r\n        const str = e.target.value;\r\n        setTranslateState(false);\r\n        if (str.length <= maxTextLength) {\r\n            setInputText(str);\r\n            setInputTextLength(str.length);\r\n        } else {\r\n            setContent('3000자 이하만 입력 가능합니다.');\r\n            setSeverity('warning');\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    const textClear = () => {\r\n        setInputText('');\r\n        setInputTextLength(0);\r\n        setTranslateState(false);\r\n        setOutputText('');\r\n    };\r\n\r\n    const copyText = () => {\r\n        navigator.clipboard.writeText(outputText);\r\n        setContent('복사가 완료되었습니다.');\r\n        setSeverity('success');\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const transLike = () => {\r\n        translationStore.transLike(true,inputText,outputText).then(result =>\r\n            {\r\n                setContent('피드백 감사합니다! :)')\r\n                setSeverity('success')\r\n                setOpen(true)\r\n            }\r\n        ).catch(err => {console.log(err);})\r\n    }\r\n\r\n    const transDislike = () => {\r\n        translationStore.transLike(false,inputText,outputText).then(result =>\r\n            {\r\n                setContent('피드백 감사합니다! :)')\r\n                setSeverity('success')\r\n                setOpen(true)\r\n            }\r\n        ).catch(err => {console.log(err);})\r\n    }\r\n\r\n    const translate = () => {\r\n        translationStore.translate(inputText).then(result => \r\n            {\r\n                setOutputText(result)\r\n                setTranslateState(true)\r\n            }\r\n        ).catch( err => { console.log(err);})\r\n    }\r\n\r\n    return(\r\n        <div className={classes.root} >\r\n            <div  className = {classes.title}>\r\n                <Typography className = {classes.title} variant=\"h3\">\r\n                    북한어 번역\r\n                </Typography>\r\n            </div>\r\n            <br />\r\n            <div className={classes.content}>\r\n                <Grid\r\n                    className = {classes.grid}\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Paper className={classes.bukPaper}>\r\n                        <Typography variant=\"h5\">북한어</Typography>\r\n                    </Paper>\r\n                    <Paper className={classes.namPaper}>\r\n                        <Typography variant=\"h5\">남한어</Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                    <Paper className={classes.paper}>\r\n                        <TextField\r\n                            className={classes.textField}\r\n                            id=\"outlined-multiline-static\"\r\n                            multiline\r\n                            autoFocus\r\n                            rows={17}\r\n                            onChange={onChange}\r\n                            value={inputText}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Typography className={classes.textLength}>\r\n                            {inputTextLength} / {maxTextLength}\r\n                        </Typography>\r\n                        <Box className={classes.box}>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                disableRipple\r\n                                onClick={translate}\r\n                                color=\"primary\"\r\n                            >\r\n                                번역하기\r\n                            </Button>\r\n                            {inputTextLength == 0 ? null : (\r\n                                <IconButton\r\n                                    className={classes.clearButton}\r\n                                    variant=\"contained\"\r\n                                    onClick={textClear}\r\n                                >\r\n                                    <ClearIcon></ClearIcon>\r\n                                </IconButton>\r\n                            )}\r\n                        </Box>\r\n                    </Paper>\r\n\r\n                    <Paper className={classes.paper}>\r\n                        <TextField\r\n                            className={classes.textField}\r\n                            id=\"outlined-multiline-static\"\r\n                            multiline\r\n                            rows={17}\r\n                            variant=\"outlined\"\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                            value={outputText}\r\n                        />\r\n                        <Box className={classes.box}>\r\n                            {translateState == false ? null : \r\n                                (\r\n                                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                                        <Button \r\n                                            className = {classes.upDownBtn}\r\n                                            disableRipple\r\n                                            color=\"primary\"\r\n                                            onClick={transLike}\r\n                                        >\r\n                                            <ThumbUpAltIcon></ThumbUpAltIcon>\r\n                                        </Button>\r\n                                        <Button \r\n                                            className = {classes.upDownBtn}\r\n                                            disableRipple\r\n                                            color=\"primary\"\r\n                                            onClick={transDislike}\r\n                                        >\r\n                                            <ThumbDownAltIcon></ThumbDownAltIcon>\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                )\r\n                            }\r\n                           \r\n                            \r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                disableRipple\r\n                                color=\"primary\"\r\n                                onClick={copyText}\r\n                            >\r\n                                <FileCopyIcon></FileCopyIcon>\r\n                            </Button>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n                <Snackbar\r\n                    open={open}\r\n                    autoHideDuration={1100}\r\n                    onClose={handleClose}\r\n                    content={content}\r\n                    severity={severity}\r\n                >\r\n                    <Alert onClose={handleClose} severity={severity}>\r\n                        {content}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component, useContext, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport PostStore from '../stores/PostStore';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '99%',\r\n        height: '100%',\r\n        display: 'inline-block',\r\n    },\r\n    paper: {\r\n        marginTop: '5%',\r\n        width: '77%',\r\n        height: '80%',\r\n        padding: '20px',\r\n        paddingLeft: '30px',\r\n        marginTop: '30px',\r\n        marginLeft: '50px',\r\n    },\r\n    title_text: {\r\n        marginLeft: '10%',\r\n        width: '70%',\r\n        border: 'groove',\r\n        borderBottom: 'solid 1px #ababab',\r\n        fontSize: '18px',\r\n        fontWeight: 'bold',\r\n    },\r\n    content_text: {\r\n        marginLeft: '10%',\r\n        width: '70%',\r\n        resize: 'none',\r\n        border: 'groove',\r\n    },\r\n    box: {\r\n        width: '80%',\r\n    },\r\n    button: {\r\n        float: 'right',\r\n    },\r\n});\r\n\r\nexport default function WriteView() {\r\n    const classes = useStyles();\r\n    const [titleText, setTitleText] = useState('');\r\n    const [contentText, setContentText] = useState('');\r\n    const postStore = useContext(PostStore.context);\r\n    const handleChangeTitle = (e) => {\r\n        setTitleText(e.target.value);\r\n    };\r\n    const handleChangeContent = (e) => {\r\n        setContentText(e.target.value);\r\n    };\r\n    const handleWrite = (e) => {\r\n        if (titleText === '') {\r\n            return alert('제목을 입력하세요.');\r\n        } else if (contentText === '') {\r\n            return alert('내용을 입력하세요.');\r\n        }\r\n        postStore.addPost(titleText, contentText).then((res) => {\r\n            alert('성공적으로 게시되었습니다.');\r\n        });\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                    <Paper className={classes.paper}>\r\n                        <TextField\r\n                            className={classes.title_text}\r\n                            id=\"title\" // 식별값\r\n                            rows={1}\r\n                            placeholder=\"제목\"\r\n                            onChange={handleChangeTitle}\r\n                            value={titleText}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            className={classes.content_text}\r\n                            id=\"content\"\r\n                            multiline // 줄바꿈 기능\r\n                            rows={30}\r\n                            placeholder=\"내용\"\r\n                            onChange={handleChangeContent}\r\n                            value={contentText}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Box className={classes.box}>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleWrite}\r\n                            >\r\n                                등록\r\n                            </Button>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative',\r\n        width: '480px',\r\n        height: '620px',\r\n        margin: 'auto',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\r\n    },\r\n    content: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n        position: 'relative',\r\n        boxSizing: 'border-box',\r\n        margin: '80px auto',\r\n        padding: '20px',\r\n        //      background: '#fff',\r\n    },\r\n    registerContent: {\r\n        width: '100%',\r\n        margin: '0 auto',\r\n        position: 'relative',\r\n        padding: '0 20px 32px',\r\n        boxSizing: 'border-box',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    registerId: {\r\n        width: '100%',\r\n        height: '40px',\r\n        marginTop: '30px',\r\n        padding: '9px 12px',\r\n        outline: 'none',\r\n        boxSizing: 'border-box',\r\n    },\r\n    registerPassword: {\r\n        width: '100%',\r\n        height: '40px',\r\n        marginTop: '15px',\r\n        padding: '9px 12px',\r\n        outline: 'none',\r\n        boxSizing: 'border-box',\r\n    },\r\n    register: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    autoRegister: {\r\n        marginTop: '20px',\r\n        fontSize: '12px',\r\n        color: '#8d8d8d',\r\n        lineHeight: 3,\r\n    },\r\n    registerBtn: {\r\n        variant: \"contained\",\r\n        color: \"white\",\r\n        height: '40px',\r\n        fontSize: '14px',\r\n        padding: '13px 30px',\r\n        cursor: 'pointer',\r\n        backgroundColor: 'black',\r\n        lineHeight: '1px',\r\n        marginTop: '20px',\r\n        marginBottom: '12px',\r\n        borderRadius: '3px',\r\n        borderStyle: 'none',\r\n    },\r\n});\r\n\r\nexport default function SignInView(props) {\r\n    const [userId, setUserId] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n    const [checkPassword, setUserCheckPassword] = useState('');\r\n    const [userNickname, makeUserNickname] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChangeUserId = (e) => {\r\n        setUserId(e.target.value);\r\n    };\r\n    const handleChangeUserPassword = (e) => {\r\n        setUserPassword(e.target.value);\r\n    };\r\n    const handleChangeUserCheckPassword = (e) => {\r\n        setUserCheckPassword(e.target.value);\r\n    };\r\n    const makeChangeUserNickname = (e) => {\r\n        makeUserNickname(e.target.value);\r\n    };\r\n    const handleRegisteUser = () => {\r\n        console.register({ userId }, { userPassword, userNickname });\r\n        /*\r\n        서버에 등록\r\n        */\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                <div className={classes.registerContent}>\r\n                <TextField\r\n                        className={classes.registerPassword}\r\n                        id=\"registerNickname\"\r\n                        placeholder=\"별명\"\r\n                        onChange={makeChangeUserNickname}\r\n                        value={userNickname}\r\n                    ></TextField>\r\n                    <TextField\r\n                        className={classes.registerId}\r\n                        id=\"registerId\"\r\n                        placeholder=\"아이디\"\r\n                        onChange={handleChangeUserId}\r\n                        value={userId}\r\n                    ></TextField>\r\n                    <TextField\r\n                        className={classes.registerPassword}\r\n                        id=\"registerPassword\"\r\n                        placeholder=\"비밀번호\"\r\n                        onChange={handleChangeUserPassword}\r\n                        value={userPassword}\r\n                    ></TextField>\r\n                    <TextField\r\n                        className={classes.registerPassword}\r\n                        id=\"checkPassword\"\r\n                        placeholder=\"비밀번호 확인\"\r\n                        onChange={handleChangeUserCheckPassword}\r\n                        value={checkPassword}\r\n                    ></TextField>\r\n\r\n                    <Button className={classes.registerBtn} onClick={handleRegisteUser}>\r\n                        {''}가입하기{''}\r\n                    </Button>\r\n                    <Modal open={open} onClose={handleClose}>\r\n                             <SignInView />\r\n                         </Modal>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default class Dictionary{\r\n    constructor(north, south, mean){\r\n        this.north = north\r\n        this.south = south\r\n        this.mean = mean\r\n    }\r\n\r\n    get_dic(){\r\n        return{\r\n            id: this.north,\r\n            south : this.south,\r\n            mean : this.mean\r\n        }\r\n    }\r\n}","import axios from 'axios'\r\nimport Dictionary from '../models/Dictionary'\r\n\r\nexport default async function requestGetDictionary( _query) {\r\n    return await axios.get(\r\n        `/api/dictionary`, { params: { query: _query } },\r\n        { withCredentials: true }\r\n    ).catch(error => { console.warn(error); return [] }).then(result => {\r\n        var data = [];\r\n        if (result.data != null) {\r\n            var tmp = result.data.result\r\n            Object.keys(tmp).map((key, index) => (\r\n                data.push((new Dictionary(tmp[key]['north'], tmp[key]['south']\r\n                    , tmp[key]['mean']\r\n                )).get_dic())\r\n            ))\r\n            return data\r\n        }\r\n        return []\r\n    });\r\n}","import {observable , action} from 'mobx';\r\nimport {createContext} from \"react\";\r\nimport requestGetDictionary from \"../controllers/DictionaryController\"\r\n\r\nclass DictionaryStore {\r\n    @observable dictionarys = [];\r\n    static instance = null;\r\n\r\n    constructor() {\r\n        this.context = createContext(this)\r\n    }\r\n    static getInstance () {\r\n        if (!DictionaryStore.instance)\r\n            this.instance = new DictionaryStore();\r\n        return DictionaryStore.instance;\r\n    }\r\n\r\n    @action\r\n    getDictionary(query) {\r\n        return requestGetDictionary(query).then(\r\n            result => {\r\n                this.dictionarys = [...result]\r\n            }\r\n        )\r\n    }\r\n}\r\nexport default DictionaryStore = DictionaryStore.getInstance()","import React, {useEffect, useState} from 'react'\r\nimport {  Typography, } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DictionaryStore from '../stores/DictionaryStore';\r\n\r\nvar elem = (document.compatMode === \"CSS1Compat\") ? \r\n    document.documentElement :\r\n    document.body;\r\n\r\nvar height = elem.clientHeight;\r\nvar width = elem.clientWidth;\r\n\r\n\r\nfunction getWidth(tableRate,rate){\r\n    return width*tableRate*rate\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root : {\r\n        width : '99%',\r\n        height : '100%',\r\n        display : 'inline-block',\r\n    },\r\n    title : {\r\n        paddingTop : '2%',\r\n        textAlign : \"center\",\r\n        fontWeight : 600,\r\n        paddingBottom : '1%'\r\n    },\r\n    table : {\r\n        paddingTop : '1%',\r\n        height: height*0.6,\r\n        width: '75%'\r\n    },\r\n    search : {\r\n        width: '50%'\r\n    }\r\n})\r\n\r\nconst columns = [\r\n    {field: 'id', headerName : '북한어', width: getWidth(0.75, 2/9)},\r\n    {field: 'south', headerName : '남한어', width: getWidth(0.75, 2/9) },\r\n    {field: 'mean', headerName : '뜻', width: getWidth(0.75, 5/10)}\r\n]\r\n\r\n\r\nexport default function DictionaryView(props) {\r\n    const classes = useStyles();\r\n    const [inputText, setInputText] = useState('');\r\n    const onChange = (e) => {\r\n        const str = e.target.value;\r\n        setInputText(str);\r\n    };\r\n\r\n    const search = () => {\r\n        dictionaryStore.getDictionary(inputText);\r\n    }\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            search()\r\n        }\r\n    }\r\n    \r\n    const dictionaryStore = React.useContext(DictionaryStore.context)\r\n    useEffect(() => {\r\n        dictionaryStore.getDictionary();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className = {classes.title}>\r\n                <Typography className = {classes.title} variant=\"h3\">\r\n                    북한말 사전\r\n                </Typography>\r\n                <div>\r\n                    <TextField \r\n                        className = {classes.search} \r\n                        id=\"standard-search\" \r\n                        type=\"search\" \r\n                        onKeyPress={handleKeyDown}\r\n                        onChange={onChange}    \r\n                    />\r\n                    <SearchIcon onClick={search}/>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <div className = {classes.content}>\r\n                <Grid\r\n                    className = {classes.grid}\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <div className = {classes.table}>\r\n                        <DataGrid columns = {columns} rows = {dictionaryStore.dictionarys} pageSize={8} />\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState} from 'react'\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport Button from '@material-ui/core/Button';\r\nimport TranslationStore from '../stores/TranslationStore';\r\nimport { Typography } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '99%',\r\n        height: '100%',\r\n        display: 'inline-block',\r\n    },\r\n    title: {\r\n        paddingTop: '2%',\r\n        textAlign: 'center',\r\n        fontWeight: 600,\r\n    },\r\n    content: {\r\n        paddingTop: '5%',\r\n    },\r\n    mainContent: {\r\n        width : '70%',\r\n    },\r\n    card: {\r\n        width: \"75%\",\r\n        height : \"50%\",\r\n        marginLeft : \"15%\"\r\n    },\r\n    pass: {\r\n        float: 'right'\r\n    },\r\n    cardGrid: {\r\n        width: '1000%'\r\n    },\r\n    ranking : {\r\n        width: '20%'\r\n    }\r\n}\r\n)\r\n\r\nexport default function TranslationView(props) {\r\n    const classes = useStyles();\r\n    const [inputText,setInputText] = useState('안녕하세요 저는 바보입니다.');\r\n    const [outputText,setOutputText] = useState('안녕하세요 저는 바보입니다.');\r\n    const translationStore = React.useContext(TranslationStore.context);\r\n\r\n    /*\r\n    useEffect(() => {\r\n        translationStore.getTestCase();\r\n    }, []);\r\n    */\r\n\r\n    return (\r\n        <div className= {classes.root}>\r\n            <div className = {classes.title}>\r\n                <Typography className = {classes.title} variant=\"h3\">\r\n                    北파고 트레이닝\r\n                </Typography>\r\n            </div>\r\n            <div className = {classes.content}>\r\n                <div className={classes.mainContent}>\r\n                    <Card className={classes.card}>\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                                {inputText}\r\n                            </Typography>\r\n                            <br />\r\n                            <Typography variant=\"h6\" component=\"h2\">\r\n                                {outputText}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions>\r\n                                <Grid\r\n                                    className = {classes.cardGrid}\r\n                                    container \r\n                                    direction=\"row\"\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\"\r\n                                    spacing={4}\r\n                                >\r\n                                    <Grid item>\r\n                                        <Button \r\n                                            variant=\"contained\"\r\n                                            disableRipple\r\n                                            size='large'\r\n                                        >\r\n                                            <ThumbDownAltIcon></ThumbDownAltIcon>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item>\r\n                                        <Button \r\n                                            variant=\"contained\"\r\n                                            disableRipple\r\n                                            size='large'\r\n                                        >\r\n                                            <ThumbUpAltIcon></ThumbUpAltIcon>\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardActions>\r\n                        <div>\r\n                            <Typography className={classes.pass}>\r\n                                건너뛰기 →\r\n                            </Typography>\r\n                        </div>\r\n                    </Card>\r\n                    </div>\r\n                    <div className={classes.ranking}>\r\n                            <Card>\r\n                                <CardContent>\r\n                                    얍!\r\n                                </CardContent>\r\n                            </Card>\r\n                    </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\nimport HomeLayout from './HomeLayout';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport FreeboardView from './components/FreeboardView';\r\nimport TranslationView from './components/TranslationView';\r\nimport WriteView from './components/WriteView';\r\nimport { createMuiTheme } from '@material-ui/core';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport SignInView from './components/SignInView';\r\nimport DictionaryView from './components/DictionaryView';\r\nimport TrainView from './components/TrainView'\r\nconst useStyle = makeStyles((theme) => ({\r\n    '@global': {\r\n        'body, html': {\r\n            padding: 0,\r\n            margin: 0,\r\n            minHeight: '100%',\r\n            backgroundColor: '#f7fafa',\r\n        },\r\n    },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#58a0d1',\r\n            dark: '#3d7092',\r\n            light: '#79b3da',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            main: '#ffffff',\r\n            contrastText: '#fff',\r\n        },\r\n    },\r\n});\r\n\r\nconst App = observer((props) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <div className={classes.root}>\r\n            <MuiThemeProvider theme={theme}>\r\n                <Router>\r\n                    <HomeLayout>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={TranslationView} />\r\n                            <Route exact path=\"/free-board\" component={FreeboardView} />\r\n                            <Route exact path=\"/dictionary\" component={DictionaryView} />\r\n                            <Route exact path=\"/train\" component={TrainView}/>\r\n                        </Switch>\r\n                    </HomeLayout>\r\n                    <Switch>\r\n                        <Route path=\"/write\" component={WriteView} />\r\n                        <Route path=\"/sign-in\" component={SignInView} />\r\n                    </Switch>\r\n                </Router>\r\n            </MuiThemeProvider>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}